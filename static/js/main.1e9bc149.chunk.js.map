{"version":3,"sources":["components/Welcome.js","components/Login.js","components/Signup.js","containers/TopicItems.js","components/Topic.js","components/AddTopic.js","components/UserProfile.js","containers/SidebarItems.js","containers/Sidebar.js","containers/CategoryItems.js","containers/Category.js","containers/Navbar.js","containers/FeedItems.js","containers/Feed.js","containers/SearchItems.js","containers/Search.js","App.js","serviceWorker.js","index.js"],"names":["Welcome","className","src","width","alt","to","Component","Login","handleChange","e","setState","target","name","value","state","username","password","align","Form","onSubmit","props","handleLoginSubmit","Group","controlId","Control","type","placeholder","onChange","this","Button","variant","id","Signup","first_name","last_name","password_confirmation","handleSignupSubmit","TopicItems","favorite","correctOne","topicsFollowed","find","x","topicPost","topic_id","logo","topic_title","onClick","event","deletePostFromTopic","Date","published_at","toString","caption","href","url","rel","image_url","toggleImage","source","Topic","postsOfTopic","topicUrl","location","pathname","split","slice","correctTopicId","toLowerCase","allTopicPosts","filter","post","deleteTopic","key","map","topic","withRouter","AddTopic","plus","avoidSpace","console","log","preventDefault","showImage","toggleUpload","page_size","language","sort_by","user_id","currentUser","imageLife","handleSubmitTopic","onKeyPress","history","push","UserProfile","handleEditProfile","SignupInfo","fetch","method","headers","body","JSON","stringify","user","then","resp","json","error","document","getElementById","innerText","localStorage","setItem","jwt","handleDeleteProfile","Authorization","getItem","window","alert","handleLogout","SidebarItems","Sidebar","Accept","res","result","updateStateOfTopicsFollowed","topics","CategoryItems","categoryName","categoryImage","deletePostFromCategory","publishedAt","title","urlToImage","Category","categoryPosts","fetchFromGoogle","Navbar","loginLogic","Object","keys","length","Dropdown","Toggle","Menu","loginLogicSearch","fetchFromSearch","search","FeedItems","undefined","Feed","onLoad","fetchToTopicId","SearchItems","searchPost","Search","searchTitle","searchPosts","App","forEach","topicId","data","attributes","topicPosts","posts","postObj","allTopicPostsIds","tp","cleanTopicPosts","topicpost","includes","searchValue","articles","article","postToOurApi","post_topic","post_id","parseInt","loginInfo","auth","prevState","concat","socialInput","topicID","createTopic","followTrending","postTrendingTopicToOurApi","clear","loading","catch","exact","path","component","render","Fragment","handleCategoryClick","scrollTo","top","behavior","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e9bc149.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Welcome extends Component {\n  render() {\n    return (\n      <div className=\"welcome\">\n        <h1 className=\"create_experience\">\n          Create your personalized\n          <br />\n          news experience\n        </h1>\n\n        <div className=\"notbrands\">\n          <p className=\"bigtime\">\n            <img src=\"../search.png\" width=\"120px\" alt=\"search\" />\n            <br />\n            <br />\n            <b>Find Articles</b>\n            <br />\n            Create topics that you are interested\n            <br /> in and we will do the rest.\n          </p>\n          <p className=\"bigtime\">\n            <img src=\"../globe.png\" width=\"120px\" alt=\"globe\" />\n            <br />\n            <br />\n            <b>Select Language</b>\n            <br />\n            Need your news in a different language?\n            <br />\n            Select from other 10 languages.\n          </p>\n          <p className=\"bigtime\">\n            <img\n              src=\"../monitor.png\"\n              width=\"120px\"\n              alt=\"monitor\"\n            />\n            <br />\n            <br />\n            <b>Customize Results</b>\n            <br />\n            Don't like a certain article in your feed?\n            <br /> No worries! Just click the x icon.\n          </p>\n        </div>\n\n        <div className=\"brands\">\n          <h1>Sources we use:</h1>\n          <img src=\"../cnn.png\" width=\"100px\" alt=\"cnn\"></img>\n          <img src=\"../fox.png\" width=\"200px\" alt=\"fox\"></img>\n          <img src=\"../bbc.png\" width=\"130px\" alt=\"bbc\"></img>&\n          More...\n        </div>\n        <h1 className=\"finalh1\">Join Today</h1>\n        <div className=\"align-buttons\">\n          <p className=\"coolbutton\">\n            <Link to=\"/Fetch-Frontend/signup\">Signup</Link>\n          </p>\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\n\nexport default class Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n \n\n  handleChange = (e) => {\n    //   console.log(e.target.value)\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n\n  render() {\n    return (\n      <div className=\"logincontainer\">\n                         <h2>Login</h2>\n      <div className=\"loginFormlife\" align=\"center\">\n        <Form onSubmit={(e) => {this.props.handleLoginSubmit(e, this.state) }}>\n  \n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Control type='text' name=\"username\" placeholder=\"Username\" onChange={(e) => this.handleChange (e)} value={this.state.username}/>\n        \n        </Form.Group>\n\n        <br></br>\n      \n        <Form.Group controlId=\"formBasicLoginPassword\">\n          <Form.Control type='password' name=\"password\" placeholder=\"Password\" onChange={(e) => this.handleChange(e)} value={this.state.password}/>\n        </Form.Group>\n\n        <Button variant=\"primary-submit\" type=\"submit\">\n          Login\n        </Button>\n        </Form>\n      {<p id=\"login-error\"></p>}\n      </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nexport default class Signup extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      first_name: \"\",\n      last_name: \"\",\n      username: \"\",\n      password: \"\",\n      password_confirmation: \"\"\n    };\n  }\n\n \n\n  handleChange = (e) => {\n    //   console.log(e.target.value)\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"logincontainer\">\n          <h3>Create your account</h3>\n        <div className=\"Formlife\" align=\"center\">\n        <Form onSubmit={(e) => {this.props.handleSignupSubmit(e, this.state) }}>\n\n\n      <div className=\"signupstuff\">\n        <Form.Group controlId=\"formBasicFirstName\">\n          <Form.Control type='text' name=\"first_name\" placeholder=\"First Name\" onChange={(e) => this.handleChange (e)} value={this.state.first_name}/>\n        \n        </Form.Group>\n\n  \n\n        <Form.Group controlId=\"formBasicLastName\">\n          <Form.Control type='text' name=\"last_name\" placeholder=\"Last Name\" onChange={(e) => this.handleChange (e)} value={this.state.last_name}/>\n        \n        </Form.Group>\n\n        </div>\n\n        <br></br><br/>\n\n\n        <Form.Group controlId=\"formBasicUsername\">\n          <Form.Control type='text' name=\"username\" placeholder=\"Username*\" onChange={(e) => this.handleChange (e)} value={this.state.username}/>\n        \n        </Form.Group>\n\n        <br></br>\n      \n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Control type='password' name=\"password\" placeholder=\"Password *\" onChange={(e) => this.handleChange(e)} value={this.state.password}/>\n        </Form.Group>\n\n        <br></br>\n      \n      <Form.Group controlId=\"formBasicPasswordConfirm\">\n        <Form.Control type='password' name=\"password_confirmation\" placeholder=\"Confirm Password *\" onChange={(e) => this.handleChange(e)} value={this.state.password_confirmation}/>\n      </Form.Group>\n\n\n\n        <Button variant=\"primary-submit\" type=\"submit\">\n          Next\n        </Button>\n        </Form>\n      {<p id=\"login-error\"></p>}\n      </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class TopicItems extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            favorite: false \n        }\n    }\n\n\n\n\n\n    render() {\n\n        let favorite\n        if (this.state.favorite === true) {\n            favorite='/heart.png'\n        }\n        else {\n            favorite='/unheart.png'\n        }\n\n        let correctOne = this.props.topicsFollowed.find(x=> x.id === this.props.topicPost.topic_id)\n        // console.log(correctOne)\n        return (\n                <div className=\"newmain\">\n                {/* {console.log(this.props.topicPost)} */}\n\n\n                <img src={correctOne.logo} alt=\"topic_logo\" className=\"feeditemslogo\"/>\n               \n               <div className=\"caption\">\n               <b>#{correctOne.topic_title}</b>  \n               \n               <button id={this.props.topicPost.id} onClick={(event) => this.props.deletePostFromTopic(event)} className=\"xOut\">x</button>\n                   \n               \n               <p className=\"date\">Published on {new Date(this.props.topicPost.published_at).toString()}</p> \n               \n               <br></br>{this.props.topicPost.caption}<br/> <a href={this.props.topicPost.url} className=\"post_link\" target=\"_blank\" rel=\"noopener noreferrer\">{this.props.topicPost.url}</a> </div>\n               \n               <a href={this.props.topicPost.url} target=\"_blank\" rel=\"noopener noreferrer\"><img src={this.props.topicPost.image_url} alt=\"news_image\" className=\"postImage\" /></a><br/>\n               \n               <div className=\"bottomofCard\">\n               <p className=\"favorite\"><img src={favorite} alt=\"favorite\" name=\"favorite\" className=\"favorite\" onClick={this.toggleImage}/>Favorite\n\n               <a href={`sms:Text Someone&body=${this.props.topicPost.caption}%0D%0A%0D%0A${this.props.topicPost.url}`}><img src=\"https://cdn2.iconfinder.com/data/icons/ios-7-icons/50/speech_bubble-512.png\" alt=\"imessage\" name=\"imessage\" className=\"iMessage\"/>iMessage</a>\n               \n                <a href={`mailto:?subject=${this.props.topicPost.caption}&body=Hey you!%0D%0A%0D%0ACheck out this cool article I found on Fetch:%0D%0A%0D%0A${this.props.topicPost.url}`}><img src=\"https://www.iconsdb.com/icons/preview/black/email-5-xxl.png\" alt=\"email\" className=\"email\"/>Email</a>\n                \n                 </p>\n\n               <p className=\"sourceinfo\">Source: {this.props.topicPost.source}</p></div>\n\n\n                </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport TopicItems from \"../containers/TopicItems\";\n\nclass Topic extends Component {\n  //        this.props.topicsFollowed.length !== 0 ? console.log(this.props.topicsFollowed) : null\n\n  render() {\n    // console.log(this.props.topicsFollowed.map(topic => topic))\n    // console.log(\"alltopicposts\",this.props.allTopicPosts)\n    let topicUrl = this.props.location.pathname.split(\"/\").slice(-1)[0];\n\n    let correctTopicId = this.props.topicsFollowed.find(\n      x => x.topic_title.toLowerCase() === topicUrl\n    );\n\n    // console.log(correctTopicId)\nlet postsOfTopic\n    if (correctTopicId) { \n    postsOfTopic = this.props.allTopicPosts.filter(\n      post => correctTopicId.id === post.topic_id\n    ); // compare inside of iteration!\n    }\n\n    // console.log(postsOfTopic)\n\n    return (\n      <>\n        <h3 className=\"mainfeedtitle\" >\n          #{topicUrl}\n          {correctTopicId ?  <img src=\"/x.png\" className=\"deletetopic\" alt=\"feedicon\" onClick={this.props.deleteTopic} id={correctTopicId.id} key={correctTopicId.id}/> : null}\n         \n          \n        </h3>\n        <div className=\"drop\"></div>\n\n        {correctTopicId ? postsOfTopic.map(topic => (\n          <TopicItems\n            topicsFollowed={this.props.topicsFollowed}\n            topicPost={topic}\n            deletePostFromTopic={this.props.deletePostFromTopic}\n          />\n        )) :  null }\n      </>\n    );\n  }\n}\n\nexport default withRouter(Topic);\n","import React, { Component } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nexport default class AddTopic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic_title: \"\",\n      page_size: 5,\n      language: \"en\",\n      plus: true,\n      sort_by: \"relevancy\",\n      logo: \"/Fetch-Frontend/missing.png\",\n      user_id: props.currentUser.id,\n      toggleUpload: false\n    };\n  }\n\n\n\n  toggleImage = () => {\n    this.setState(state => ({ plus: !state.plus }));\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  avoidSpace = e => {\n    if (e.key === \" \" || e.key >= 0 || e.key < 10) {\n      console.log(\"spacebar:\", e.key);\n      e.preventDefault();\n    }\n  };\n\n  showImage = () => {\n    if (this.state.toggleUpload === true) {\n      this.setState({ toggleUpload: false });\n    } else {\n      this.setState({ toggleUpload: true });\n    }\n  };\n  render() {\n    let imageLife;\n    if (this.state.plus === true) {\n      imageLife = \"/Fetch-Frontend/toggleon.png\";\n    } else {\n      imageLife = \"/Fetch-Frontend/toggleoff.png\";\n    }\n\n    return (\n      <div>\n        <h2 className=\"addtopictitle\">Add a New Topic</h2>\n        <br />\n        <div className=\"add-topic\">\n          <Form\n            onSubmit={e => {\n              this.props.handleSubmitTopic(e, this.state);\n            }}\n          >\n            <Form.Group controlId=\"formBasicTopicTitle\">\n              <p className=\"hashtag\">#</p>\n              <Form.Control\n                type=\"text\"\n                name=\"topic_title\"\n                placeholder=\"TopicTitle\"\n                onKeyPress={e => this.avoidSpace(e)}\n                onChange={e => this.handleChange(e)}\n                value={this.state.topic_title}\n              />\n            </Form.Group>\n            <br />\n            <br />\n            <h2 className=\"addtopiclogo\">Add Logo</h2>\n            <br />\n            <img\n              src={this.state.logo}\n              name=\"logo\"\n              className=\"missing\"\n              // onClick={this.alertMe}\n              alt=\"missing\"\n              // onKeyPress={e => this.avoidSpace(e)}\n              id=\"on\"\n              // onClick={e => this.showImage(e)}\n              value=\"/missing.png\"\n            />\n            {this.state.toggleUpload === true ? (\n              <div className=\"upload_image\">\n                <Form.Group controlId=\"formBasicTopicLogo\">\n                  <Form.Control\n                    type=\"text\"\n                    name=\"logo\"\n                    placeholder=\"Insert Logo URL\"\n                    onKeyPress={e => this.avoidSpace(e)}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Form.Group>\n              </div>\n            ) : null}\n            <p\n              // onClick={this.alertMe}\n              onClick={e => this.showImage(e)}\n              className=\"uploadimage\"\n            >\n              Upload File\n            </p>\n            <br /> <h2 className=\"addsourcehandle\">Language</h2>\n            <p className=\"handleLife\">\n              <select\n                value={this.state.language}\n                className=\"language\"\n                name=\"language\"\n                onChange={e => this.handleChange(e)}\n              >\n                <option value=\"en\">English</option>\n                <option value=\"ar\">Arabic</option>\n                <option value=\"de\">German</option>\n                <option value=\"es\">Spanish</option>\n                <option value=\"fr\">French</option>\n                <option value=\"it\">Italian</option>\n                <option value=\"nl\">Dutch</option>\n                <option value=\"pt\">Portuguese</option>\n                <option value=\"ru\">Russian</option>\n                <option value=\"zh\">Zhōngwén</option>\n              </select>\n            </p>\n            <br /> <br></br> <br /> <br /> <br></br> <br /> <br />\n            <h2 className=\"addsourcehandle\">Sort By</h2>\n            <p className=\"handleLife\">\n              <select\n                value={this.state.sort_by}\n                className=\"sort_by\"\n                name=\"sort_by\"\n                onChange={e => this.handleChange(e)}\n              >\n                <option value=\"relevancy\">Relevance</option>\n                <option value=\"publishedAt\">Latest</option>\n                <option value=\"popularity\">Popular</option>\n              </select>\n            </p>\n            <br /> <br></br> <br /> <br /> <br></br> <br /> <br />\n            <h2 className=\"addsourcehandle\">Results</h2>\n            <p className=\"handleLife\">\n              <select\n                value={this.state.page_size}\n                className=\"page_size\"\n                name=\"page_size\"\n                onChange={e => this.handleChange(e)}\n              >\n                <option value=\"5\">5</option>\n                <option value=\"10\">10</option>\n                <option value=\"15\">15</option>\n                <option value=\"20\">20</option>\n              </select>\n            </p>\n            <br />\n            <br></br> <br />\n            <br />\n            <br></br>\n            <p className=\"handleLife\">\n              <img\n                src={imageLife}\n                alt=\"relatednews\"\n                name=\"plus\"\n                className=\"toggleHandle\"\n                onClick={this.toggleImage}\n              />\n              Results must include topic title\n            </p>\n            <br></br>\n            <div className=\"submitTopic\">\n              <button\n                onClick={() => this.props.history.push(\"/Fetch-Frontend/feed\")}\n                className=\"submitTopic-btton-nevermind\"\n              >\n                Nevermind\n              </button>\n              <button className=\"submitTopic-btton\">Create Topic</button>\n              <br></br>\n            </div>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\n\nclass UserProfile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentUser: null,\n      first_name: \"\",\n      last_name: \"\",\n      username: \"\",\n      password: \"\",\n      password_confirmation: \"\"\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  componentDidMount() {\n    this.setState({\n      currentUser: this.props.currentUser\n    });\n  }\n\n  handleEditProfile = (event, SignupInfo) => {\n    event.preventDefault();\n    fetch(\"https://fetch-backend-api.herokuapp.com/profile\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user: SignupInfo,\n        id: this.props.currentUser.id\n      })\n    })\n      .then(resp => resp.json())\n      .then(json => {\n        if (json.error) {\n          document.getElementById(\"login-error\").innerText = json.error;\n        } else {\n          localStorage.setItem(\"token\", json.jwt);\n          //   console.log(json)\n          this.setState({\n            currentUser: {\n              id: json.id,\n              ...json\n            }\n          });\n          this.props.history.push(\"/Fetch-Frontend/feed\");\n        }\n      });\n  };\n\n  handleDeleteProfile = event => {\n    event.preventDefault();\n    fetch(\n      `https://fetch-backend-api.herokuapp.com/users/${this.props.currentUser.id}`,\n      {\n        method: \"delete\",\n        headers: { \"Content-Type\": \"application/json\" },\n        Authorization: localStorage.getItem(\"token\")\n      }\n    )\n      .then(resp => resp.json())\n      .then(json => {\n        if (json.error) {\n          window.alert(json.error);\n        } else {\n          this.props.handleLogout();\n          window.alert(\"Successfully Deleted\");\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"logincontainer\">\n        <div className=\"editprofile\">\n          <h2>Edit Profile</h2>\n          <div className=\"EditFormlife\" align=\"center\">\n            <Form\n              onSubmit={e => {\n                this.handleEditProfile(e, this.state);\n              }}\n            >\n              <div className=\"signupstuff\">\n                <Form.Group controlId=\"formBasicUpdateFirstName\">\n                  <Form.Control\n                    type=\"text\"\n                    name=\"first_name\"\n                    placeholder={this.props.currentUser.first_name}\n                    onChange={e => this.handleChange(e)}\n                    value={this.state.first_name}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicUpdateLastName\">\n                  <Form.Control\n                    type=\"text\"\n                    name=\"last_name\"\n                    placeholder={this.props.currentUser.last_name}\n                    onChange={e => this.handleChange(e)}\n                    value={this.state.last_name}\n                  />\n                </Form.Group>\n              </div>\n\n              <br></br>\n              <br />\n\n              <Form.Group controlId=\"formBasicUsername\">\n                <Form.Control\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder={this.props.currentUser.username}\n                  onChange={e => this.handleChange(e)}\n                  value={this.state.username}\n                />\n              </Form.Group>\n\n              <br></br>\n\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Control\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"•••••••\"\n                  onChange={e => this.handleChange(e)}\n                  value={this.state.password}\n                />\n              </Form.Group>\n\n              <br></br>\n\n              <Form.Group controlId=\"formBasicPasswordConfirm\">\n                <Form.Control\n                  type=\"password\"\n                  name=\"password_confirmation\"\n                  placeholder=\"•••••••\"\n                  onChange={e => this.handleChange(e)}\n                  value={this.state.password_confirmation}\n                />\n              </Form.Group>\n\n              <div className=\"editprofilebuttons\">\n                <button\n                  onClick={event => this.handleDeleteProfile(event)}\n                  className=\"submitTopic-btton-delete\"\n                >\n                  Delete\n                </button>\n                <button\n                  onClick={() => window.alert(\"Successfully Updated\")}\n                  className=\"submitTopic-btton\"\n                >\n                  Update\n                </button>\n                {<p id=\"login-error\"></p>}\n              </div>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(UserProfile);\n","import React, { Component } from 'react'\nimport {withRouter} from \"react-router-dom\";\n\n\nclass SidebarItems extends Component {\n    render() {\n        // console.log(this.props.history)\n        return (\n            <p className=\"sidebaritems\" onClick={() => this.props.history.push(`/topic/${this.props.topic.topic_title.toLowerCase()}`) }>\n               <img src={this.props.topic.logo} alt=\"topic_logo\"/> #{this.props.topic.topic_title}\n            </p>\n        )\n    }\n}\n\n\nexport default withRouter(SidebarItems);// so we can we use history.push","import React, { Component } from \"react\";\nimport SidebarItems from \"./SidebarItems\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Sidebar extends Component {\n  // MAKE FUNCTIONAL COMPONENT LATER\n\n  componentDidMount() {\n    let token = localStorage.getItem(\"token\");\n    if (token) {\n      fetch(\n        `https://fetch-backend-api.herokuapp.com/users/${this.props.currentUser.id}`,\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: localStorage.getItem(\"token\"),\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\"\n          }\n        }\n      )\n        .then(res => res.json())\n        .then(result => {\n          this.props.updateStateOfTopicsFollowed(result.user.topics); // passing result up via this function\n        });\n    }\n  }\n\n  render() {\n    return (\n      <header className=\"App-header\">\n        <div className=\"addtopicstuff\">\n          <h3>Topics You Follow</h3>\n\n          {this.props.topicsFollowed !== null ? (\n            this.props.topicsFollowed.map(topic => (\n              <SidebarItems topic={topic} key={topic.id} />\n            ))\n          ) : (\n            <>\n              <div className=\"lds-dual-ring\"></div>\n            </>\n          )}\n\n          {/* <p className=\"addnewsidebaritems\" onClick={() => this.props.history.push(\"/add-topic\")}> <img src=\"/unheart.png\" alt=\"Add Topic\" className=\"favorites\" />Favorites</p> */}\n          <p\n            className=\"addnewsidebaritems\"\n            onClick={() => this.props.history.push(\"/Fetch-Frontend/add-topic\")}\n          >\n            {\" \"}\n            <img\n              src=\"https://friconix.com/png/fi-xtluxx-plus-thin.png\"\n              alt=\"Add Topic\"\n              className=\"addMore\"\n            />\n            Add a New Topic{\" \"}\n          </p>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default withRouter(Sidebar);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass CategoryItems extends Component {\n  constructor() {\n    super();\n    this.state = {\n      favorite: false\n    };\n  }\n\n  toggleImage = () => {\n    this.setState(state => ({ favorite: !state.favorite }));\n  };\n\n  render() {\n    let favorite;\n    if (this.state.favorite === true) {\n      favorite = \"/Fetch-Frontend/heart.png\";\n    } else {\n      favorite = \"/Fetch-Frontend/unheart.png\";\n    }\n\n    let categoryName = this.props.location.pathname.split(\"/\").slice(-1)[0];\n\n    let categoryImage = `/Fetch-Frontend/${categoryName}.png`;\n    //    console.log(this.props)\n    return (\n      <>\n        <div className=\"newmain\">\n          <img src={categoryImage} alt=\"topic_logo\" className=\"feeditemslogo\" />\n\n          <div className=\"caption\">\n            {\" \"}\n            <b className=\"CategoryTitle\">#{categoryName} </b>\n            <button\n              id={this.props.topicPost.url}\n              onClick={event => this.props.deletePostFromCategory(event)}\n              className=\"xOut\"\n            >\n              x\n            </button>\n            <p className=\"date\">\n              Published on{\" \"}\n              {new Date(this.props.topicPost.publishedAt).toString()}\n            </p>\n            <br></br>\n            {this.props.topicPost.title}\n            <br />{\" \"}\n            <a\n              className=\"post_link\"\n              href={this.props.topicPost.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {this.props.topicPost.url}\n            </a>\n            <br />\n            <a\n              href={this.props.topicPost.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <br></br>\n              <img\n                src={this.props.topicPost.urlToImage}\n                className=\"categorypostImage\"\n              />\n            </a>\n            <br />\n          </div>\n\n          <div className=\"bottomofCard\">\n            <p className=\"favorite\">\n              <img\n                src={favorite}\n                alt=\"favorite\"\n                name=\"favorite\"\n                className=\"favorite\"\n                onClick={this.toggleImage}\n              />\n              Favorite\n              <a\n                href={`sms:Text Someone&body=${this.props.topicPost.title}%0D%0A%0D%0A${this.props.topicPost.url}`}\n              >\n                <img\n                  src=\"/Fetch-Frontend/imessage.png\"\n                  alt=\"imessage\"\n                  name=\"imessage\"\n                  className=\"iMessage\"\n                />\n                iMessage\n              </a>\n              <a\n                href={`mailto:?subject=${this.props.topicPost.title}&body=Hey you!%0D%0A%0D%0ACheck out this cool article I found on Fetch:%0D%0A%0D%0A${this.props.topicPost.url}`}\n              >\n                <img\n                  src=\"/Fetch-Frontend/mail.png\"\n                  alt=\"email\"\n                  className=\"email\"\n                />\n                Email\n              </a>\n            </p>\n\n            <p className=\"sourceinfo\">\n              Source: {this.props.topicPost.source.name}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(CategoryItems);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport CategoryItems from \"./CategoryItems\";\n// import CategorySidebar from \"../containers/CategorySidebar\";\n\nclass Category extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      categoryPosts: [],\n      categoryName: \"\"\n    };\n  }\n\n  render() {\n    let topicUrl = this.props.location.pathname.split(\"/\").slice(-1)[0];\n    // let notFeedPath = this.props.location.pathname.split(\"/\")[1]\n    // console.log(notFeedPath)\n    return (\n      <>\n        <div className=\"topdog\">\n          {/* {notFeedPath === \"category\"  &&  */}\n          <h3 className=\"mainfeedtitle\">\n            #{topicUrl}\n            <img\n              src=\"../refresh.png\"\n              className=\"feedtitleimage\"\n              alt=\"feedicon\"\n              onClick={this.props.fetchFromGoogle}\n            />\n          </h3>\n\n          <div className=\"drop\"></div>\n\n          {this.props.categoryPosts.map(post => (\n            <CategoryItems\n              topicPost={post}\n              key={post.url}\n              categoryName={this.state.categoryName}\n              deletePostFromCategory={this.props.deletePostFromCategory}\n            />\n          ))}\n        </div>\n\n        {/* <div className=\"category\">\n            <h3>Categories</h3>\n            <br />\n              <p onClick={e => this.handleCategoryClick(\"business\")}>#Business</p>\n              <p onClick={e => this.handleCategoryClick(\"entertainment\")}>\n                #Entertainment\n              </p>\n              <p onClick={e => this.handleCategoryClick(\"general\")}>#General</p>\n              <p onClick={e => this.handleCategoryClick(\"health\")}>#Health</p>\n              <p onClick={e => this.handleCategoryClick(\"science\")}>#Science</p>\n              <p onClick={e => this.handleCategoryClick(\"sports\")}>#Sports</p>\n              <p onClick={e => this.handleCategoryClick(\"technology\")}>#Technology\n              \n              </p>\n    \n           \n          \n          </div>  */}\n      </>\n    );\n  }\n}\n\nexport default withRouter(Category);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Dropdown } from \"react-bootstrap\";\n// import { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { withRouter } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      search: \"\"\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  loginLogic = () => {\n    // if not logged in\n    if (Object.keys(this.props.currentUser).length === 0) {\n      return (\n        <>\n          <div\n            className=\"topcoolbutton\"\n            onClick={() => this.props.history.push(\"/Fetch-Frontend/signup\")}\n          >\n            <p>Signup</p>\n          </div>\n          <div\n            className=\"topcoolbutton\"\n            onClick={() => this.props.history.push(\"/Fetch-Frontend/login\")}\n          >\n            <p>Login</p>\n          </div>\n        </>\n      );\n    } else\n      return (\n        <div className=\"profile-nav\">\n          <Dropdown>\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n              <img src=\"../missing_avatar.jpg\" alt=\"avatar\" />{\" \"}\n              {this.props.currentUser.username}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <p\n                className=\"dropdown-item\"\n                onClick={() =>\n                  this.props.history.push(\"/Fetch-Frontend/profile\")\n                }\n              >\n                Edit Profile\n              </p>\n              <p className=\"dropdown-item\" onClick={this.props.handleLogout}>\n                Logout\n              </p>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n      );\n  };\n\n  loginLogicSearch = () => {\n    if (Object.keys(this.props.currentUser).length !== 0) {\n      return (\n        <div>\n          <form\n            onSubmit={e => {\n              this.props.fetchFromSearch(e, this.state.search);\n            }}\n          >\n            <Form.Group controlId=\"formBasicSearch\">\n              <center>\n                <Form.Control\n                  type=\"text\"\n                  name=\"search\"\n                  placeholder=\"Search All Articles\"\n                  onChange={e => this.handleChange(e)}\n                  value={this.state.search}\n                  className=\"searchBar\"\n                />\n              </center>\n            </Form.Group>\n          </form>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"topbar\">\n        <Link\n          to={\n            Object.keys(this.props.currentUser).length === 0\n              ? \"/Fetch-Frontend/\"\n              : \"/Fetch-Frontend/feed\"\n          }\n        >\n          <img className=\"logo\" src=\"../logo.png\" alt=\"logo\" />\n        </Link>\n\n        {this.loginLogicSearch()}\n\n        <div className=\"right-align-buttons\">{this.loginLogic()}</div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Navbar);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass FeedItems extends Component {\n  constructor() {\n    super();\n    this.state = {\n      favorite: false\n    };\n  }\n\n  toggleImage = () => {\n    this.setState(state => ({ favorite: !state.favorite }));\n  };\n\n  render() {\n    let favorite;\n    if (this.state.favorite === true) {\n      favorite = \"/Fetch-Frontend/heart.png\";\n    } else {\n      favorite = \"/Fetch-Frontend/unheart.png\";\n    }\n    let correctOne = this.props.topicsFollowed.find(\n      x => x.id === this.props.topicPost.topic_id\n    );\n\n    // console.log(correctOne)\n    return (\n      <>\n        {correctOne !== undefined ? (\n          <div className=\"newmain\">\n            <img\n              src={correctOne.logo}\n              alt=\"topic_logo\"\n              className=\"feeditemslogo\"\n              onClick={() =>\n                this.props.history.push(\n                  `/topic/${correctOne.topic_title.toLowerCase()}`\n                )\n              }\n            />\n\n            <div className=\"caption\">\n              <b\n                onClick={() =>\n                  this.props.history.push(\n                    `/topic/${correctOne.topic_title.toLowerCase()}`\n                  )\n                }\n              >\n                #{correctOne.topic_title}{\" \"}\n              </b>\n              <button\n                id={this.props.topicPost.id}\n                onClick={event => this.props.deletePostFromTopic(event)}\n                className=\"xOut\"\n              >\n                x\n              </button>\n              <p className=\"date\">\n                Published on{\" \"}\n                {new Date(this.props.topicPost.published_at).toString()}\n              </p>\n              <br />\n              {this.props.topicPost.caption}\n              <br />{\" \"}\n              <a\n                className=\"post_link\"\n                href={this.props.topicPost.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {this.props.topicPost.url}\n              </a>{\" \"}\n            </div>\n\n            <a\n              href={this.props.topicPost.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                src={this.props.topicPost.image_url}\n                className=\"feedpostImage\"\n              />\n            </a>\n            <br />\n\n            <div className=\"bottomofCard\">\n              <p className=\"favorite\">\n                <img\n                  src={favorite}\n                  alt=\"favorite\"\n                  name=\"favorite\"\n                  className=\"favorite\"\n                  onClick={this.toggleImage}\n                />\n                Favorite\n                <a\n                  href={`sms:Text Someone&body=${this.props.topicPost.caption}%0D%0A%0D%0A${this.props.topicPost.url}`}\n                >\n                  <img\n                    src=\"/Fetch-Frontend/imessage.png\"\n                    alt=\"imessage\"\n                    name=\"imessage\"\n                    className=\"iMessage\"\n                  />\n                  iMessage\n                </a>\n                <a\n                  href={`mailto:?subject=${this.props.topicPost.caption}&body=Hey you!%0D%0A%0D%0ACheck out this cool article I found on Fetch:%0D%0A%0D%0A${this.props.topicPost.url}`}\n                >\n                  <img\n                    src=\"/Fetch-Frontend/mail.png\"\n                    alt=\"email\"\n                    className=\"email\"\n                  />\n                  Email\n                </a>\n              </p>\n\n              <p className=\"sourceinfo\">\n                Source: {this.props.topicPost.source}\n              </p>\n            </div>\n          </div>\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default withRouter(FeedItems); // so we can we use history.push\n","import React, { Component } from \"react\";\nimport FeedItems from \"./FeedItems\";\n// import CategorySidebar from \"../containers/CategorySidebar\";\n\nexport default class Feed extends Component {\n  render() {\n    return (\n      <>\n        <h3 className=\"mainfeedtitle\">\n          Fetch Feed\n          <img\n            src=\"../refresh.png\"\n            className=\"feedtitleimage\"\n            alt=\"feedicon\"\n            onLoad={this.props.fetchToTopicId}\n            onClick={this.props.fetchToTopicId}\n          />\n        </h3>\n\n        <div className=\"drop\"></div>\n        {this.props.allTopicPosts !== null &&\n        this.props.allTopicPosts.length !== 0 ? (\n          this.props.allTopicPosts.map(topicPost => (\n            <FeedItems\n              deletePostFromTopic={this.props.deletePostFromTopic}\n              topicsFollowed={this.props.topicsFollowed}\n              topicPost={topicPost}\n              key={topicPost.id}\n            />\n          ))\n        ) : (\n          <div className=\"lds-dual-ring\"></div>\n        )}\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass SearchItems extends Component {\n  constructor() {\n    super();\n    this.state = {\n      favorite: false\n    };\n  }\n\n  toggleImage = () => {\n    this.setState(state => ({ favorite: !state.favorite }));\n  };\n\n  render() {\n    let favorite;\n    if (this.state.favorite === true) {\n      favorite = \"/Fetch-Frontend/heart.png\";\n    } else {\n      favorite = \"/Fetch-Frontend/unheart.png\";\n    }\n    // let searchName = this.props.location.pathname.split(\"/\").slice(-1)[0];\n    return (\n      <>\n        <div className=\"newmain\">\n          <img\n            src=\"/Fetch-Frontend/magnifying.jpg\"\n            alt=\"topic_logo\"\n            className=\"feeditemslogo\"\n          />\n\n          <div className=\"caption\">\n            {\" \"}\n            <b className=\"CategoryTitle\">{this.props.searchPost.source.name} </b>\n            <p className=\"date\">\n              Published on{\" \"}\n              {new Date(this.props.searchPost.publishedAt).toString()}\n            </p>\n            <br></br>\n            {this.props.searchPost.title}\n            <br />{\" \"}\n            <a\n              className=\"post_link\"\n              href={this.props.searchPost.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {this.props.searchPost.url}\n            </a>\n            <br />\n            <a\n              href={this.props.searchPost.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <br></br>\n              <img\n                src={this.props.searchPost.urlToImage}\n                className=\"categorypostImage\"\n              />\n            </a>\n            <br />\n          </div>\n\n          <div className=\"bottomofCard\">\n            <p className=\"favorite\">\n              <img\n                src={favorite}\n                alt=\"favorite\"\n                name=\"favorite\"\n                className=\"favorite\"\n                onClick={this.toggleImage}\n              />\n              Favorite\n              <a\n                href={`sms:Text Someone&body=${this.props.searchPost.title}%0D%0A%0D%0A${this.props.searchPost.url}`}\n              >\n                <img\n                  src=\"/Fetch-Frontend/imessage.png\"\n                  alt=\"imessage\"\n                  name=\"imessage\"\n                  className=\"iMessage\"\n                />\n                iMessage\n              </a>\n              <a\n                href={`mailto:?subject=${this.props.searchPost.title}&body=Hey you!%0D%0A%0D%0ACheck out this cool article I found on Fetch:%0D%0A%0D%0A${this.props.searchPost.url}`}\n              >\n                <img\n                  src=\"/Fetch-Frontend/mail.png\"\n                  alt=\"email\"\n                  className=\"email\"\n                />\n                Email\n              </a>\n            </p>\n\n            <p className=\"sourceinfo\">\n              Source: {this.props.searchPost.source.name}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(SearchItems);\n","import React, { Component } from \"react\";\nimport SearchItems from \"./SearchItems\";\n\nexport default class Search extends Component {\n  render() {\n    let searchTitle = this.props.location.pathname.split(\"/\").slice(-1)[0];\n    return (\n      <>\n        <div className=\"topdog\">\n          {/* {notFeedPath === \"category\"  &&  */}\n          <h3 className=\"mainfeedtitle\">\n            Search: #{searchTitle}\n            {/* <img\n                  src=\"../refresh.png\"\n                  className=\"feedtitleimage\"\n                  alt=\"feedicon\"\n                  onClick={this.props.fetchFromGoogle}\n                /> */}\n          </h3>\n\n          <div className=\"drop\"></div>\n\n          {this.props.searchPosts.map(post => (\n            <SearchItems\n              searchPost={post}\n              key={post.url}\n              //   categoryName={this.props.categoryName}\n              deletePostFromCategory={this.props.deletePostFromCategory}\n            />\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Welcome from \"./components/Welcome\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport Topic from \"./components/Topic\";\nimport AddTopic from \"./components/AddTopic\";\nimport UserProfile from \"./components/UserProfile\";\nimport Sidebar from \"./containers/Sidebar\";\nimport Category from \"./containers/Category\";\nimport Navbar from \"./containers/Navbar\";\nimport Feed from \"./containers/Feed\";\nimport Search from \"./containers/Search\";\nimport { Route, withRouter, Redirect, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      currentUser: {},\n      loading: true,\n      topicsFollowed: [],\n      allTopicPosts: [],\n      categoryPosts: [],\n      searchPosts: []\n    };\n  }\n\n  // iterate through this.state.topicsFollowed and match topic_title with topicUrl...\n  // if successful then make fetch request localhost.com/3000/topics/{id}\n\n  fetchToTopicId = () => {\n    console.log(this.state.topicsFollowed);\n    //wrote with emiley 2/6/20\n\n    this.state.topicsFollowed.forEach(topic => {\n      console.log(topic);\n\n      fetch(`https://fetch-backend-api.herokuapp.com/topics/${topic.id}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: localStorage.getItem(\"token\")\n        }\n      })\n        .then(resp => resp.json())\n        .then(resp => {\n          // Matt 2/8/20\n          let topicId = resp.topic.data.attributes.id;\n          let topicPosts = resp.topic.data.attributes.posts;\n          console.log(topicPosts);\n          topicPosts = topicPosts.map(postObj => {\n            return { ...postObj, topic_id: topicId };\n          });\n          let allTopicPostsIds =\n            this.state.allTopicPosts !== null\n              ? this.state.allTopicPosts.map(tp => tp.id)\n              : [];\n          // console.log(this.state.allTopicPosts)\n          let cleanTopicPosts = topicPosts.filter(\n            topicpost => !allTopicPostsIds.includes(topicpost.id)\n          ); // if this topicPost's id isn't in allTopicPostsIds\n\n          this.state.allTopicPosts !== null &&\n            this.setState({\n              allTopicPosts: [...this.state.allTopicPosts, ...cleanTopicPosts] // object with [Posts] inside of it.\n            });\n        });\n    });\n    console.log(\"ended\");\n  };\n\n  fetchFromSearch = (e, searchValue) => {\n    e.preventDefault();\n    console.log(searchValue);\n    fetch(\n      `https://newsapi.org/v2/everything?language=en&pageSize=10&q=+${searchValue}&excludeDomains=slashdot.org&apiKey=07af66c02837407a82106528c10d64c5`\n    )\n      .then(res => res.json())\n      .then(resp =>\n        this.setState({\n          searchPosts: resp.articles\n        })\n      );\n    this.props.history.push(`/Fetch-Frontend/search/${searchValue}`);\n  };\n\n  fetchFromGoogle = () => {\n    // console.log(\"fetchFromGoogle has been hit\")\n    // eslint-disable-next-line\n    this.state.topicsFollowed.map(topic => {\n      let plus = topic.plus === true ? \"+\" : \"\";\n\n      fetch(\n        `https://newsapi.org/v2/everything?language=${topic.language}&pageSize=${topic.page_size}&q=${plus}${topic.topic_title}&sortBy=${topic.sort_by}&excludeDomains=slashdot.org&apiKey=07af66c02837407a82106528c10d64c5`\n      )\n        .then(res => res.json())\n        .then(result => {\n          result.articles.map(article => this.postToOurApi(article, topic.id)); // thanks emiley sending each Articles into postToOurApi, good allTopicPosts! not using state!\n        });\n    });\n  };\n\n  postToOurApi = (result, topicId) => {\n    fetch(\"https://fetch-backend-api.herokuapp.com/posts\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        topic_id: topicId,\n        post: {\n          caption: result.title,\n          source: result.source.name,\n          image_url: result.urlToImage,\n          url: result.url,\n          published_at: result.publishedAt\n        }\n      })\n    })\n      .then(resp => resp.json())\n      .then(resp => {\n        if (resp.post) {\n          // console.log(resp)\n          fetch(\"https://fetch-backend-api.herokuapp.com/post_topics\", {\n            method: \"POST\",\n            headers: {\n              \"Content-type\": \"application/json\",\n              Accept: \"application/json\",\n              Authorization: localStorage.getItem(\"token\") // test out without this later.\n            },\n            body: JSON.stringify({\n              post_topic: {\n                post_id: resp.post.id,\n                topic_id: topicId\n              }\n            })\n          });\n        }\n      });\n    // .then(this.props.history.push(\"/feed\"))\n  };\n\n  componentDidMount() {\n    // if (localStorage.getItem(\"token\") !== null) {\n\n    fetch(\"https://fetch-backend-api.herokuapp.com/re_auth\", {\n      // fetch GET would only need 1 argument. the rest need 2\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      }\n    })\n      .then(res => res.json())\n      .catch(error => {\n        if (error) {\n          return window.alert(\"Turn on the server dumbass\");\n        } else {\n          return window.alert(\"Oh my. Something has gone terribly wrong.\");\n        }\n      })\n      .then(json => {\n        if (json.user !== undefined) {\n          this.setState(\n            {\n              currentUser: {\n                id: json.user.data.id,\n                ...json.user.data.attributes\n              }\n            },\n            () => {\n              this.setState({ loading: false });\n            }\n          );\n        } else {\n          this.setState({ loading: false });\n        }\n      })\n      .catch(() => {});\n    // }\n  }\n\n  deletePostFromCategory = event => {\n    event.preventDefault();\n    this.setState({\n      categoryPosts: this.state.categoryPosts.filter(\n        x => x.url !== event.target.id\n      )\n    });\n  };\n\n  deletePostFromTopic = event => {\n    event.preventDefault();\n    // console.log(this.state.allTopicPosts)\n    // console.log(event.target.id)\n    fetch(`https://fetch-backend-api.herokuapp.com/posts/${event.target.id}`, {\n      method: \"delete\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      }\n    });\n    // console.log(this.state.allTopicPosts.filter(x=> x.id !== parseInt(event.target.id)))\n    // console.log({allTopicPosts: (this.state.allTopicPosts.filter(x=> x.id !== parseInt(event.target.id) ) ) } )\n    this.setState({\n      allTopicPosts: this.state.allTopicPosts.filter(\n        x => x.id !== parseInt(event.target.id)\n      )\n    });\n  };\n\n  handleLoginSubmit = (event, loginInfo) => {\n    event.preventDefault();\n    fetch(\"https://fetch-backend-api.herokuapp.com/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        auth: {\n          // id: loginInfo.id,\n          username: loginInfo.username,\n          password: loginInfo.password,\n          first_name: loginInfo.first_name,\n          last_name: loginInfo.last_name\n        }\n      })\n    })\n      .then(resp => resp.json())\n      .then(json => {\n        if (json.error) {\n          document.getElementById(\"login-error\").innerText = json.error;\n        } else {\n          localStorage.setItem(\"token\", json.jwt);\n          this.setState({\n            currentUser: {\n              id: json.user.data.attributes.id,\n              username: json.user.data.attributes.username,\n              first_name: json.user.data.attributes.first_name,\n              last_name: json.user.data.attributes.last_name\n            }\n          });\n          this.fetchToTopicId();\n          this.props.history.push(\"/Fetch-Frontend/feed\");\n        }\n      });\n  };\n\n  updateStateOfTopicsFollowed = result => {\n    /* 1. Pass down this function to Sidebar, and take in the value via fetch result\n    2. Use concat to combine prevstate with new results\n    3. call this function via handleSubmitTopic & pass it the addTopicForm info.\n    */\n    this.setState(prevState => ({\n      topicsFollowed: prevState.topicsFollowed.concat(result)\n    }));\n  };\n\n  handleSubmitTopic = (event, socialInput) => {\n    // before creating posttopic make sure you run this and also make sure POSTING to POST MODEL is done.\n    event.preventDefault();\n    socialInput.topic_title !== \"\"\n      ? fetch(\"https://fetch-backend-api.herokuapp.com/add-topic\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\",\n            Accept: \"application/json\",\n            Authorization: localStorage.getItem(\"token\")\n          },\n          body: JSON.stringify({\n            topic: {\n              ...socialInput\n            }\n          })\n        })\n          .then(res => res.json())\n          .then(data => {\n            this.updateStateOfTopicsFollowed([data.topic.data.attributes]);\n            return data.topic.data.attributes.id; // topicId\n          })\n          .then(topicID => {\n            // took out topicID\n            this.fetchFromGoogle(topicID); // took out topicID\n          })\n          .then(() => {\n            this.props.history.push(\"/Fetch-Frontend/feed\"); // this.props.history.push(\"/feed\"); needs .then\n          })\n      : window.alert(\"Topic title cannot be empty\");\n  };\n\n  handleSignupSubmit = (event, SignupInfo) => {\n    // first function called when signing up\n    event.preventDefault();\n    fetch(\"https://fetch-backend-api.herokuapp.com/signup\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user: SignupInfo\n      })\n    })\n      .then(resp => resp.json())\n      .then(json => {\n        if (json.error) {\n          document.getElementById(\"login-error\").innerText = json.error;\n        } else {\n          localStorage.setItem(\"token\", json.jwt);\n          this.setState({\n            currentUser: {\n              id: json.user.data.attributes.id,\n              ...json.user.data.attributes\n            }\n          });\n          this.createTopic(); // second function called   // i think because this is not in a .then\n\n          // this.props.history.push(\"/feed\"); // why am I pushing to feed\n        }\n      });\n  };\n\n  createTopic = () => {\n    // CREATES TRENDING TOPIC\n    // before creating posttopic make sure you run this and also make sure POSTING to POST MODEL is done.\n    fetch(\"https://fetch-backend-api.herokuapp.com/add-topic\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        topic: {\n          topic_title: \"Trending\",\n          logo:\n            \"https://cust-images.grenadine.co/grenadine/image/upload/c_fill,f_jpg,g_face,h_1472,w_1472/v0/Kinnektor/QgOV_5613.png\",\n          user_id: this.state.currentUser.id,\n          //  page_size: 5,\n          //  plus: true,\n          //  sort_by: relevancy,\n          page_size: null,\n          plus: null,\n          sort_by: null\n        }\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        // console.log(\"topic Id\", topicId)\n        this.followTrending(data.topic.data.attributes.id); // took out topicID\n      })\n      .then(() => {\n        this.props.history.push(\"/Fetch-Frontend/feed\"); // this.props.history.push(\"/feed\"); needs .then\n      });\n  };\n\n  deleteTopic = event => {\n    event.preventDefault();\n    fetch(`https://fetch-backend-api.herokuapp.com/topics/${event.target.id}`, {\n      method: \"delete\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      }\n    });\n    this.setState({\n      topicsFollowed: this.state.topicsFollowed.filter(\n        x => x.id !== parseInt(event.target.id)\n      )\n    });\n    this.props.history.push(\"/Fetch-Frontend/feed\");\n  };\n\n  followTrending = topicId => {\n    fetch(\n      `http://newsapi.org/v2/top-headlines?pageSize=9&country=us&apiKey=07af66c02837407a82106528c10d64c5`\n    )\n      .then(res => res.json())\n      .then(result => {\n        // console.log(result) // successful\n        result.articles.map(article =>\n          this.postTrendingTopicToOurApi(article, topicId)\n        ); // thanks emiley sending each Articles into postToOurApi, good allTopicPosts! not using state!\n      });\n  };\n\n  postTrendingTopicToOurApi = (result, topicId) => {\n    fetch(\"https://fetch-backend-api.herokuapp.com/posts\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        topic_id: topicId,\n        post: {\n          caption: result.title,\n          source: result.source.name,\n          image_url: result.urlToImage,\n          url: result.url,\n          published_at: result.publishedAt\n        }\n      })\n    })\n      .then(resp => resp.json())\n      .then(data => {\n        // console.log(data)\n        fetch(\"https://fetch-backend-api.herokuapp.com/post_topics\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\",\n            Accept: \"application/json\",\n            Authorization: localStorage.getItem(\"token\")\n          },\n          body: JSON.stringify({\n            post_topic: {\n              post_id: data.post.id,\n              topic_id: topicId\n            }\n          })\n        });\n      })\n      .then(this.fetchToTopicId());\n    // .then(this.props.history.push(\"/feed\"));\n  };\n\n  handleLogout = () => {\n    localStorage.clear();\n    this.setState({\n      currentUser: {},\n      topicsFollowed: [],\n      allTopicPosts: null,\n      categoryPosts: []\n    });\n    this.props.history.push(\"/Fetch-Frontend\");\n  };\n\n  handleCategoryClick(categoryName) {\n    // console.log(\"handleCategory FETCH just happened\")\n    fetch(\n      `https://newsapi.org/v2/top-headlines?country=us&category=${categoryName}&pageSize=9&apiKey=07af66c02837407a82106528c10d64c5`\n    )\n      .then(resp => resp.json())\n      .then(resp =>\n        this.setState({\n          categoryPosts: resp.articles,\n          categoryName: categoryName\n        })\n      );\n    this.props.history.push(`/Fetch-Frontend/category/${categoryName}`);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar\n          currentUser={this.state.currentUser}\n          handleLogout={this.handleLogout}\n          fetchFromSearch={this.fetchFromSearch}\n        />\n\n        <Switch>\n          <Route exact path=\"/Fetch-Frontend\" component={Welcome} />\n\n          <Route\n            exact\n            path=\"/Fetch-Frontend/login\"\n            render={props => (\n              <Login {...props} handleLoginSubmit={this.handleLoginSubmit} />\n            )}\n          />\n          <Route\n            exact\n            path=\"/Fetch-Frontend/signup\"\n            render={props => (\n              <Signup {...props} handleSignupSubmit={this.handleSignupSubmit} />\n            )}\n          />\n\n          {this.state.loading === false ? (\n            Object.keys(this.state.currentUser).length !== 0 ? (\n              <React.Fragment>\n                <Route\n                  exact\n                  path=\"/Fetch-Frontend/feed\"\n                  render={props => (\n                    <Feed\n                      {...props}\n                      topicsFollowed={this.state.topicsFollowed}\n                      fetchFromGoogle={this.fetchFromGoogle}\n                      fetchToTopicId={this.fetchToTopicId}\n                      allTopicPosts={this.state.allTopicPosts}\n                      deletePostFromTopic={this.deletePostFromTopic}\n                    />\n                  )}\n                />\n\n\n                <Route\n                  path=\"/Fetch-Frontend/search/\"\n                  render={props => (\n                    <Search\n                      {...props}\n                      currentUser={this.state.currentUser}\n                      searchPosts={this.state.searchPosts}\n                      deletePostFromCategory={this.deletePostFromCategory}\n                      fetchFromGoogle={this.fetchFromGoogle}\n                    />\n                  )}\n                />\n\n\n\n                <Route\n                  path=\"/Fetch-Frontend/category/\"\n                  render={props => (\n                    <Category\n                      {...props}\n                      currentUser={this.state.currentUser}\n                      categoryPosts={this.state.categoryPosts}\n                      // categoryName={this.state.categoryName}\n                      deletePostFromCategory={this.deletePostFromCategory}\n                    />\n                  )}\n                />\n\n                <div className=\"category\">\n                  <h3>Categories</h3>\n                  <br />\n                  <p onClick={e => this.handleCategoryClick(\"business\")}>\n                    #Business\n                  </p>\n                  <p onClick={e => this.handleCategoryClick(\"entertainment\")}>\n                    #Entertainment\n                  </p>\n                  <p onClick={e => this.handleCategoryClick(\"general\")}>\n                    #General\n                  </p>\n                  <p onClick={e => this.handleCategoryClick(\"health\")}>\n                    #Health\n                  </p>\n                  <p onClick={e => this.handleCategoryClick(\"science\")}>\n                    #Science\n                  </p>\n                  <p onClick={e => this.handleCategoryClick(\"sports\")}>\n                    #Sports\n                  </p>\n                  <p onClick={e => this.handleCategoryClick(\"technology\")}>\n                    #Technology\n                  </p>\n                </div>\n                {/* <Category/> */}\n\n                <Sidebar\n                  currentUser={this.state.currentUser}\n                  topicsFollowed={this.state.topicsFollowed}\n                  updateStateOfTopicsFollowed={this.updateStateOfTopicsFollowed}\n                />\n\n                <Route\n                  path=\"/Fetch-Frontend/topic\"\n                  render={props => (\n                    <Topic\n                      {...props}\n                      fetchFromGoogle={this.fetchFromGoogle}\n                      topicsFollowed={this.state.topicsFollowed}\n                      allTopicPosts={this.state.allTopicPosts}\n                      deletePostFromTopic={this.deletePostFromTopic}\n                      deleteTopic={this.deleteTopic}\n                    />\n                  )}\n                />\n\n                <Route\n                  exact\n                  path=\"/Fetch-Frontend/add-topic\"\n                  render={props => (\n                    <AddTopic\n                      {...props}\n                      currentUser={this.state.currentUser}\n                      handleSubmitTopic={this.handleSubmitTopic}\n                      updateStateOfTopicsFollowed={\n                        this.updateStateOfTopicsFollowed\n                      }\n                    />\n                  )}\n                />\n\n                <Route\n                  exact\n                  path=\"/Fetch-Frontend/profile\"\n                  render={props => (\n                    <UserProfile\n                      {...props}\n                      currentUser={this.state.currentUser}\n                      handleLogout={this.handleLogout}\n                    />\n                  )}\n                />\n              </React.Fragment>\n            ) : (\n              <Redirect to=\"/Fetch-Frontend\" />\n            )\n          ) : (\n            <>\n              <div className=\"lds-dual-ring\"></div>\n            </>\n          )}\n        </Switch>\n        <img\n          src=\"../scroll.png\"\n          onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\n          className=\"scrollTop\"\n          alt=\"ScrollTop\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n// require('dotenv').config()\n// console.log(process.env.API_KEY)\n\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}