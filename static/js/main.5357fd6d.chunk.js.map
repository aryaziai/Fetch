{"version":3,"sources":["components/Testimonials.js","components/Welcome.js","components/Login.js","components/Signup.js","containers/TopicItems.js","components/Topic.js","components/AddTopic.js","components/UserProfile.js","containers/SidebarItems.js","containers/Sidebar.js","containers/CategoryItems.js","containers/Category.js","containers/Navbar.js","containers/FeedItems.js","containers/Feed.js","containers/SearchItems.js","containers/Search.js","App.js","serviceWorker.js","index.js"],"names":["Testimonials","showArrows","infiniteLoop","showThumbs","showStatus","autoPlay","interval","src","class","Component","Welcome","className","to","width","alt","Login","handleChange","e","setState","target","name","value","state","username","password","align","Form","onSubmit","props","handleLoginSubmit","Group","controlId","Control","type","placeholder","onChange","this","Button","variant","id","Signup","first_name","last_name","password_confirmation","handleSignupSubmit","TopicItems","favorite","correctOne","topicsFollowed","find","x","topicPost","topic_id","logo","topic_title","onClick","event","deletePostFromTopic","Date","published_at","toString","caption","href","url","rel","image_url","toggleImage","source","Topic","postsOfTopic","topicUrl","location","pathname","split","slice","correctTopicId","toLowerCase","allTopicPosts","filter","post","deleteTopic","key","map","topic","AddTopic","plus","avoidSpace","preventDefault","showImage","toggleUpload","page_size","language","sort_by","user_id","currentUser","imageLife","handleSubmitTopic","onKeyPress","history","push","UserProfile","handleEditProfile","SignupInfo","fetch","method","headers","body","JSON","stringify","user","then","resp","json","error","document","getElementById","innerText","localStorage","setItem","jwt","handleDeleteProfile","Authorization","getItem","window","alert","handleLogout","withRouter","SidebarItems","Sidebar","Accept","res","result","updateStateOfTopicsFollowed","topics","innerWidth","CategoryItems","categoryName","categoryImage","deletePostFromCategory","publishedAt","title","urlToImage","Category","categoryPosts","fetchFromGoogle","Navbar","handleKeyPress","setTimeout","searchToEmpty","search","loginLogic","Object","keys","length","Dropdown","Toggle","Menu","loginLogicSearch","fetchFromSearch","FeedItems","undefined","Feed","onLoad","delayFetch","fetchToTopicId","SearchItems","searchPost","Search","searchTitle","searchPosts","App","data","attributes","createTrendingTopic","followTrending","topicId","articles","article","postTrendingTopicToOurApi","post_topic","post_id","socialInput","topicID","postToOurApi","forEach","topicPosts","posts","postObj","allTopicPostsIds","tp","cleanTopicPosts","topicpost","includes","searchValue","parseInt","loginInfo","auth","prevState","concat","clear","loading","catch","searchQuery","exact","path","component","render","Fragment","handleCategoryClick","scrollTo","top","behavior","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5357fd6d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from \"react-responsive-carousel\";\n\nexport default class Testimonials extends Component {\n  render() {\n    return (\n      <Carousel\n        showArrows={true}\n        infiniteLoop={true}\n        showThumbs={false}\n        showStatus={false}\n        autoPlay={true}\n        interval={6100}\n      >\n        <div>\n          <img src=\"https://i.imgur.com/I3ep4rY.png\" />\n          <div class=\"myCarousel\">\n            <h3>Shirley Fultz</h3>\n            <h4>Designer</h4>\n            <p>\n              It's freeing to be able to catch up on customized news and not be\n              distracted by a social media element on the same site\n            </p>\n          </div>\n        </div>\n\n        <div>\n          <img src=\"https://www.norway-consulting.no/wp-content/uploads/2017/04/LI-profilbilde-circular-fra-Picmonkey.png\" />\n          <div class=\"myCarousel\">\n            <h3>Daniel Keystone</h3>\n            <h4>Designer</h4>\n            <p>\n              The simple and intuitive design makes it easy for me use. I highly\n              recommend Fetch to my peers.\n            </p>\n          </div>\n        </div>\n\n        <div>\n          <img src=\"https://images.squarespace-cdn.com/content/v1/572fa54ef8baf3257a3153f5/1512348060512-1NM459PG4MOAAHAZK2HO/ke17ZwdGBToddI8pDm48kJK4Mm1kch8SFO9ZNkN1NT97gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z5QHyNOqBUUEtDDsRWrJLTmN9YSRtfoTLg6dUq-6F17A0FFZK5fArcnK1IqGweyunyWChwIwkIJ_P7MaZif-uMs/Face+Circle.png?format=1500w\" />\n          <div class=\"myCarousel\">\n            <h3>Theo Sorel</h3>\n            <h4>Designer</h4>\n            <p>\n              I enjoy catching up with Fetch on my laptop, or on my phone when\n              I'm on the go!\n            </p>\n          </div>\n        </div>\n      </Carousel>\n    );\n  }\n}\n\n// Don't forget to include the css in your page\n// <link rel=\"stylesheet\" href=\"carousel.css\"/>\n// Begin DemoSliderControls\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import Slider from \"react-animated-slider\";\n// import \"react-animated-slider/build/horizontal.css\";\nimport Testimonials from \"./Testimonials\";\n\nexport default class Welcome extends Component {\n  render() {\n    return (\n      <div className=\"welcome\">\n        <div className=\"create_experience\">\n          Create your personalized\n          <br />\n          news experience\n          <br />\n          {/* Create your personalized <span class=\"break\">news experience</span> */}\n          <Link to=\"/signup\">\n            <h1 className=\"goldbutton\"> Join Today</h1>\n          </Link>\n        </div>\n\n        <div className=\"notbrands\">\n          <p className=\"bigtime\">\n            <img\n              src=\"https://fetchnow.org/search.png\"\n              width=\"120px\"\n              alt=\"search\"\n            />\n            <br />\n            <br />\n            <b>Find Articles</b>\n            <br />\n            Create topics that you are interested\n            <br /> in and we will do the rest.\n          </p>\n          <p className=\"bigtime\">\n            <img\n              src=\"https://fetchnow.org/globe.png\"\n              width=\"120px\"\n              alt=\"globe\"\n            />\n            <br />\n            <br />\n            <b>Select Language</b>\n            <br />\n            Need your news in a different language?\n            <br />\n            Select from other 10 languages.\n          </p>\n          <p className=\"bigtime\">\n            <img\n              src=\"https://fetchnow.org/monitor.png\"\n              width=\"120px\"\n              alt=\"monitor\"\n            />\n            <br />\n            <br />\n            <b>Customize Results</b>\n            <br />\n            Don't like a certain article in your feed?\n            <br /> No worries! Just click the x icon.\n          </p>\n        </div>\n\n        <div className=\"brands\">\n          <h1>Popular Sources</h1>\n          <div className=\"brandimages\">\n            <img src=\"https://fetchnow.org/cnn.png\" alt=\"cnn\"></img>\n            <br />\n            <img src=\"https://fetchnow.org/fox.jpg\" alt=\"fox\"></img> <br />\n            <img src=\"https://fetchnow.org/msnbc.png\" alt=\"msnbc\"></img> <br />\n            <img src=\"https://fetchnow.org/bbc.jpeg\" alt=\"bbc\"></img> <br />\n          </div>\n        </div>\n        <h1 className=\"finalh1\">Testimonials</h1>\n        <Testimonials />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nexport default class Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = e => {\n    //   console.log(e.target.value)\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"logincontainer\">\n        <h2>Sign In</h2>\n        <div className=\"loginFormlife\" align=\"center\">\n          <Form\n            onSubmit={e => {\n              this.props.handleLoginSubmit(e, this.state);\n            }}\n          >\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"Username\"\n                onChange={e => this.handleChange(e)}\n                value={this.state.username}\n              />\n            </Form.Group>\n\n            <br></br>\n\n            <Form.Group controlId=\"formBasicLoginPassword\">\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={e => this.handleChange(e)}\n                value={this.state.password}\n              />\n            </Form.Group>\n\n            <Button variant=\"primary-submit\" type=\"submit\">\n              Sign In\n            </Button>\n          </Form>\n          {<p id=\"login-error\"></p>}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nexport default class Signup extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      first_name: \"\",\n      last_name: \"\",\n      username: \"\",\n      password: \"\",\n      password_confirmation: \"\"\n    };\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"logincontainer\">\n        <h3>Create your account</h3>\n        <div className=\"Formlife\" align=\"center\">\n          <Form\n            onSubmit={e => {\n              this.props.handleSignupSubmit(e, this.state);\n            }}\n          >\n            <div className=\"signupstuff\">\n              <Form.Group controlId=\"formBasicFirstName\">\n                <Form.Control\n                  type=\"text\"\n                  name=\"first_name\"\n                  placeholder=\"First Name\"\n                  onChange={e => this.handleChange(e)}\n                  value={this.state.first_name}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicLastName\">\n                <Form.Control\n                  type=\"text\"\n                  name=\"last_name\"\n                  placeholder=\"Last Name\"\n                  onChange={e => this.handleChange(e)}\n                  value={this.state.last_name}\n                />\n              </Form.Group>\n            </div>\n            <br></br>\n            <br />\n            <Form.Group controlId=\"formBasicUsername\">\n              <Form.Control\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"Username*\"\n                onChange={e => this.handleChange(e)}\n                value={this.state.username}\n              />\n            </Form.Group>\n            <br></br>\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password *\"\n                onChange={e => this.handleChange(e)}\n                value={this.state.password}\n              />\n            </Form.Group>\n            <br></br>\n            <Form.Group controlId=\"formBasicPasswordConfirm\">\n              <Form.Control\n                type=\"password\"\n                name=\"password_confirmation\"\n                placeholder=\"Confirm Password *\"\n                onChange={e => this.handleChange(e)}\n                value={this.state.password_confirmation}\n              />\n            </Form.Group>\n            <br></br>\n            <p className=\"passwordinfo\">\n              Note: Password must be at least 5 characters\n            </p>\n            <Button variant=\"primary-submit\" type=\"submit\">\n              Sign Up\n            </Button>\n          </Form>\n\n          {<p id=\"login-error\"></p>}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class TopicItems extends Component {\n  constructor() {\n    super();\n    this.state = {\n      favorite: false,\n    };\n  }\n\n  render() {\n    let favorite;\n    if (this.state.favorite === true) {\n      favorite = \"https://fetchnow.org/heart.png\";\n    } else {\n      favorite = \"https://fetchnow.org/unheart.png\";\n    }\n\n    let correctOne = this.props.topicsFollowed.find(\n      (x) => x.id === this.props.topicPost.topic_id\n    );\n    // console.log(correctOne)\n    return (\n      <div className=\"newmain\">\n        {/* {console.log(this.props.topicPost)} */}\n\n        <img src={correctOne.logo} alt=\"topic_logo\" className=\"feeditemslogo\" />\n\n        <div className=\"caption\">\n          <b>#{correctOne.topic_title}</b>\n          <button\n            id={this.props.topicPost.id}\n            onClick={(event) => this.props.deletePostFromTopic(event)}\n            className=\"xOut\"\n          >\n            x\n          </button>\n          <p className=\"date\">\n            Published on{\" \"}\n            {new Date(this.props.topicPost.published_at).toString()}\n          </p>\n          <br></br>\n          {this.props.topicPost.caption}\n          <br />{\" \"}\n          <a\n            href={this.props.topicPost.url}\n            className=\"post_link\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {this.props.topicPost.url}\n          </a>{\" \"}\n        </div>\n\n        <a\n          href={this.props.topicPost.url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img\n            src={this.props.topicPost.image_url}\n            alt=\"news_image\"\n            className=\"feedpostImage\"\n          />\n        </a>\n        <br />\n\n        <div className=\"bottomofCard\">\n          <p className=\"favorite\">\n            <img\n              src={favorite}\n              alt=\"favorite\"\n              name=\"favorite\"\n              className=\"favorite\"\n              onClick={this.toggleImage}\n            />\n            Favorite\n            <a\n              href={`sms:Text Someone&body=${this.props.topicPost.caption}%0D%0A%0D%0A${this.props.topicPost.url}`}\n            >\n              <img\n                src=\"https://cdn2.iconfinder.com/data/icons/ios-7-icons/50/speech_bubble-512.png\"\n                alt=\"imessage\"\n                name=\"imessage\"\n                className=\"iMessage\"\n              />\n              iMessage\n            </a>\n            <a\n              href={`mailto:?subject=${this.props.topicPost.caption}&body=Hey you!%0D%0A%0D%0ACheck out this cool article I found on Fetch:%0D%0A%0D%0A${this.props.topicPost.url}`}\n            >\n              <img\n                src=\"https://fetchnow.org/mail.png\"\n                alt=\"email\"\n                className=\"email\"\n              />\n              Email\n            </a>\n          </p>\n\n          <p className=\"sourceinfo\">Source: {this.props.topicPost.source}</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import { withRouter } from \"react-router-dom\";\nimport TopicItems from \"../containers/TopicItems\";\n\nexport default class Topic extends Component {\n  render() {\n    // console.log(this.props.topicsFollowed.map(topic => topic))\n    let topicUrl = this.props.location.pathname.split(\"/\").slice(-1)[0];\n\n    let correctTopicId = this.props.topicsFollowed.find(\n      (x) => x.topic_title.toLowerCase() === topicUrl\n    );\n\n    // console.log(correctTopicId)\n    let postsOfTopic;\n    if (correctTopicId) {\n      postsOfTopic = this.props.allTopicPosts.filter(\n        (post) => correctTopicId.id === post.topic_id\n      ); // compare inside of iteration!\n    }\n\n    return (\n      <>\n        <h3 className=\"categoryfeedtitle\">\n          Topic: <span className=\"searchTitle\">#{topicUrl}</span>\n        </h3>\n        {correctTopicId ? (\n          <img\n            src=\"https://fetchnow.org/x.png\"\n            className=\"deletetopic\"\n            alt=\"feedicon\"\n            onClick={this.props.deleteTopic}\n            id={correctTopicId.id}\n            key={correctTopicId.id}\n          />\n        ) : null}\n        <div className=\"categorydrop\"></div>\n\n        {correctTopicId\n          ? postsOfTopic.map((topic) => (\n              <TopicItems\n                topicsFollowed={this.props.topicsFollowed}\n                topicPost={topic}\n                deletePostFromTopic={this.props.deletePostFromTopic}\n              />\n            ))\n          : null}\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form } from \"react-bootstrap\";\n// import \"../MobileHide.css\";\n\nexport default class AddTopic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topic_title: \"\",\n      page_size: 5,\n      language: \"en\",\n      plus: true,\n      sort_by: \"relevancy\",\n      logo: \"https://fetchnow.org/missing.png\",\n      user_id: props.currentUser.id,\n      toggleUpload: false,\n    };\n  }\n\n  toggleImage = () => {\n    this.setState((state) => ({ plus: !state.plus }));\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  avoidSpace = (e) => {\n    if (e.key === \" \" || e.key >= 0 || e.key < 10) {\n      e.preventDefault();\n    }\n  };\n\n  showImage = () => {\n    if (this.state.toggleUpload === true) {\n      this.setState({ toggleUpload: false });\n    } else {\n      this.setState({ toggleUpload: true });\n    }\n  };\n  render() {\n    let imageLife;\n    if (this.state.plus === true) {\n      imageLife = \"https://fetchnow.org/toggleon.png\";\n    } else {\n      imageLife = \"https://fetchnow.org/toggleoff.png\";\n    }\n\n    return (\n      <div>\n        <h2 className=\"addtopictitle\">Add a New Topic</h2>\n        <br />\n        <div className=\"add-topic\">\n          <Form\n            onSubmit={(e) => {\n              this.props.handleSubmitTopic(e, this.state);\n            }}\n          >\n            <Form.Group controlId=\"formBasicTopicTitle\">\n              <p className=\"hashtag\">#</p>\n              <Form.Control\n                type=\"text\"\n                name=\"topic_title\"\n                placeholder=\"TopicTitle\"\n                onKeyPress={(e) => this.avoidSpace(e)}\n                onChange={(e) => this.handleChange(e)}\n                value={this.state.topic_title}\n              />\n            </Form.Group>\n            <br />\n            <br />\n            <h2 className=\"addtopiclogo\">Add Logo</h2>\n            <br />\n            <img\n              src={this.state.logo}\n              name=\"logo\"\n              className=\"missing\"\n              alt=\"missing\"\n              id=\"on\"\n              value=\"/missing.png\"\n            />\n            {this.state.toggleUpload === true ? (\n              <div className=\"upload_image\">\n                <Form.Group controlId=\"formBasicTopicLogo\">\n                  <Form.Control\n                    type=\"text\"\n                    name=\"logo\"\n                    placeholder=\"Insert Logo URL\"\n                    onKeyPress={(e) => this.avoidSpace(e)}\n                    onChange={(e) => this.handleChange(e)}\n                  />\n                </Form.Group>\n              </div>\n            ) : null}\n            <p\n              // onClick={this.alertMe}\n              onClick={(e) => this.showImage(e)}\n              className=\"uploadimage\"\n            >\n              Upload Image\n            </p>\n            <br /> <h2 className=\"addsourcehandle\">Language</h2>\n            <p className=\"handleLife\">\n              <select\n                value={this.state.language}\n                className=\"language\"\n                name=\"language\"\n                onChange={(e) => this.handleChange(e)}\n              >\n                <option value=\"en\">English</option>\n                <option value=\"ar\">Arabic</option>\n                <option value=\"de\">German</option>\n                <option value=\"es\">Spanish</option>\n                <option value=\"fr\">French</option>\n                <option value=\"it\">Italian</option>\n                <option value=\"nl\">Dutch</option>\n                <option value=\"pt\">Portuguese</option>\n                <option value=\"ru\">Russian</option>\n                <option value=\"zh\">Zhōngwén</option>\n              </select>\n            </p>\n            <br /> <br></br> <br /> <br /> <br></br> <br /> <br />\n            <h2 className=\"addsourcehandle\">Sort By</h2>\n            <p className=\"handleLife\">\n              <select\n                value={this.state.sort_by}\n                className=\"sort_by\"\n                name=\"sort_by\"\n                onChange={(e) => this.handleChange(e)}\n              >\n                <option value=\"relevancy\">Relevance</option>\n                <option value=\"publishedAt\">Latest</option>\n                <option value=\"popularity\">Popular</option>\n              </select>\n            </p>\n            <br /> <br></br> <br /> <br /> <br></br> <br /> <br />\n            <h2 className=\"addsourcehandle\">Results</h2>\n            <p className=\"handleLife\">\n              <select\n                value={this.state.page_size}\n                className=\"page_size\"\n                name=\"page_size\"\n                onChange={(e) => this.handleChange(e)}\n              >\n                <option value=\"5\">5</option>\n                <option value=\"10\">10</option>\n                <option value=\"15\">15</option>\n                <option value=\"20\">20</option>\n              </select>\n            </p>\n            <br />\n            <br></br> <br />\n            <br />\n            <br></br>\n            <p className=\"handleLife\">\n              <img\n                src={imageLife}\n                alt=\"relatednews\"\n                name=\"plus\"\n                className=\"toggleHandle\"\n                onClick={this.toggleImage}\n              />\n              Results must include topic title\n            </p>\n            <br></br>\n            <div className=\"submitTopic\">\n              <button\n                onClick={() => this.props.history.push(\"/feed\")}\n                className=\"submitTopic-btton-nevermind\"\n              >\n                Nevermind\n              </button>\n              <button className=\"submitTopic-btton\">Create Topic</button>\n              <br></br>\n            </div>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\n\nclass UserProfile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentUser: null,\n      first_name: \"\",\n      last_name: \"\",\n      username: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  componentDidMount() {\n    this.setState({\n      currentUser: this.props.currentUser,\n    });\n  }\n\n  handleEditProfile = (event, SignupInfo) => {\n    event.preventDefault();\n    fetch(\"https://fetch-backend-api.herokuapp.com/profile\", {\n      method: \"PATCH\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user: SignupInfo,\n        id: this.props.currentUser.id,\n      }),\n    })\n      .then((resp) => resp.json())\n      .then((json) => {\n        if (json.error) {\n          document.getElementById(\"login-error\").innerText = json.error;\n        } else {\n          localStorage.setItem(\"token\", json.jwt);\n          //   console.log(json)\n          this.setState({\n            currentUser: {\n              id: json.id,\n              ...json,\n            },\n          });\n          this.props.history.push(\"/feed\");\n        }\n      });\n  };\n\n  handleDeleteProfile = (event) => {\n    event.preventDefault();\n    fetch(\n      `https://fetch-backend-api.herokuapp.com/users/${this.props.currentUser.id}`,\n      {\n        method: \"delete\",\n        headers: { \"Content-Type\": \"application/json\" },\n        Authorization: localStorage.getItem(\"token\"),\n      }\n    )\n      .then((resp) => resp.json())\n      .then((json) => {\n        if (json.error) {\n          window.alert(json.error);\n        } else {\n          this.props.handleLogout();\n          window.alert(\"Successfully Deleted\");\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"logincontainer\">\n        <div className=\"editprofile\">\n          <h2>Edit Profile</h2>\n          <div className=\"EditFormlife\" align=\"center\">\n            <Form\n              onSubmit={(e) => {\n                this.handleEditProfile(e, this.state);\n              }}\n            >\n              <div className=\"signupstuff\">\n                <Form.Group controlId=\"formBasicUpdateFirstName\">\n                  <Form.Control\n                    type=\"text\"\n                    name=\"first_name\"\n                    placeholder={this.props.currentUser.first_name}\n                    onChange={(e) => this.handleChange(e)}\n                    value={this.state.first_name}\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicUpdateLastName\">\n                  <Form.Control\n                    type=\"text\"\n                    name=\"last_name\"\n                    placeholder={this.props.currentUser.last_name}\n                    onChange={(e) => this.handleChange(e)}\n                    value={this.state.last_name}\n                  />\n                </Form.Group>\n              </div>\n\n              <br></br>\n              <br />\n\n              <Form.Group controlId=\"formBasicUsername\">\n                <Form.Control\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder={this.props.currentUser.username}\n                  onChange={(e) => this.handleChange(e)}\n                  value={this.state.username}\n                />\n              </Form.Group>\n\n              <br></br>\n\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Control\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"•••••••\"\n                  onChange={(e) => this.handleChange(e)}\n                  value={this.state.password}\n                />\n              </Form.Group>\n\n              <br></br>\n\n              <Form.Group controlId=\"formBasicPasswordConfirm\">\n                <Form.Control\n                  type=\"password\"\n                  name=\"password_confirmation\"\n                  placeholder=\"•••••••\"\n                  onChange={(e) => this.handleChange(e)}\n                  value={this.state.password_confirmation}\n                />\n              </Form.Group>\n\n              <div className=\"editprofilebuttons\">\n                <button\n                  onClick={(event) => this.handleDeleteProfile(event)}\n                  className=\"submitTopic-btton-delete\"\n                >\n                  Delete\n                </button>\n                <button\n                  onClick={() => window.alert(\"Successfully Updated\")}\n                  className=\"submitTopic-btton\"\n                >\n                  Update\n                </button>\n                {<p id=\"login-error\"></p>}\n              </div>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(UserProfile);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass SidebarItems extends Component {\n  render() {\n    // console.log(this.props.history)\n    return (\n      <p\n        className=\"sidebaritems\"\n        onClick={() =>\n          this.props.history.push(\n            `/topic/${this.props.topic.topic_title.toLowerCase()}`\n          )\n        }\n      >\n        <img src={this.props.topic.logo} alt=\"topic_logo\" /> #\n        {this.props.topic.topic_title}\n      </p>\n    );\n  }\n}\n\nexport default withRouter(SidebarItems); // so we can we use history.push\n","import React, { Component } from \"react\";\nimport SidebarItems from \"./SidebarItems\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Sidebar extends Component {\n  // MAKE FUNCTIONAL COMPONENT LATER\n\n  componentDidMount() {\n    let token = localStorage.getItem(\"token\");\n    if (token) {\n      fetch(\n        `https://fetch-backend-api.herokuapp.com/users/${this.props.currentUser.id}`,\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: localStorage.getItem(\"token\"),\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n        }\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          this.props.updateStateOfTopicsFollowed(result.user.topics); // passing result up via this function\n        });\n    }\n  }\n\n  render() {\n    return this.props.location.pathname.split(\"/\").slice(-1)[0] === \"feed\" ||\n      window.innerWidth > 1034 ? (\n      <header className=\"App-header\">\n        <div className=\"addtopicstuff\">\n          <h3>Topics You Follow</h3>\n\n          <div className=\"mainSideMove\">\n            <p\n              className=\"addnewsidebaritems\"\n              onClick={() => this.props.history.push(\"/add-topic\")}\n            >\n              <img\n                src=\"https://i.imgur.com/DPZuNtB.png\"\n                alt=\"Add Topic\"\n                className=\"addMore\"\n              />\n              Add a New Topic{\" \"}\n            </p>\n\n            {this.props.topicsFollowed !== null ? (\n              this.props.topicsFollowed.map((topic) => (\n                <SidebarItems topic={topic} key={topic.id} />\n              ))\n            ) : (\n              <>\n                <div className=\"lds-dual-ring\"></div>\n              </>\n            )}\n          </div>\n        </div>\n      </header>\n    ) : null;\n  }\n}\n\nexport default withRouter(Sidebar);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass CategoryItems extends Component {\n  constructor() {\n    super();\n    this.state = {\n      favorite: false,\n    };\n  }\n\n  toggleImage = () => {\n    this.setState((state) => ({ favorite: !state.favorite }));\n  };\n\n  render() {\n    let favorite;\n    if (this.state.favorite === true) {\n      favorite = \"https://fetchnow.org/heart.png\";\n    } else {\n      favorite = \"https://fetchnow.org/unheart.png\";\n    }\n\n    let categoryName = this.props.location.pathname.split(\"/\").slice(-1)[0];\n\n    let categoryImage = `https://fetchnow.org/${categoryName}.png`;\n    //    console.log(this.props)\n    return (\n      <>\n        <div className=\"newmain\">\n          <img src={categoryImage} alt=\"topic_logo\" className=\"feeditemslogo\" />\n\n          <div className=\"caption\">\n            {\" \"}\n            <b className=\"CategoryTitle\">#{categoryName} </b>\n            <button\n              id={this.props.topicPost.url}\n              onClick={(event) => this.props.deletePostFromCategory(event)}\n              className=\"xOut\"\n            >\n              x\n            </button>\n            <p className=\"date\">\n              Published on{\" \"}\n              {new Date(this.props.topicPost.publishedAt).toString()}\n            </p>\n            <br></br>\n            {this.props.topicPost.title}\n            <br />{\" \"}\n            <a\n              className=\"post_link\"\n              href={this.props.topicPost.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {this.props.topicPost.url}\n            </a>\n            <br />\n            <a\n              href={this.props.topicPost.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <br></br>\n              <img\n                src={this.props.topicPost.urlToImage}\n                className=\"categorypostImage\"\n              />\n            </a>\n            <br />\n          </div>\n\n          <div className=\"bottomofCard\">\n            <p className=\"favorite\">\n              <img\n                src={favorite}\n                alt=\"favorite\"\n                name=\"favorite\"\n                className=\"favorite\"\n                onClick={this.toggleImage}\n              />\n              Favorite\n              <a\n                href={`sms:Text Someone&body=${this.props.topicPost.title}%0D%0A%0D%0A${this.props.topicPost.url}`}\n              >\n                <img\n                  src=\"https://fetchnow.org/imessage.png\"\n                  alt=\"imessage\"\n                  name=\"imessage\"\n                  className=\"iMessage\"\n                />\n                iMessage\n              </a>\n              <a\n                href={`mailto:?subject=${this.props.topicPost.title}&body=Hey you!%0D%0A%0D%0ACheck out this cool article I found on Fetch:%0D%0A%0D%0A${this.props.topicPost.url}`}\n              >\n                <img\n                  src=\"https://fetchnow.org/mail.png\"\n                  alt=\"email\"\n                  className=\"email\"\n                />\n                Email\n              </a>\n            </p>\n\n            <p className=\"sourceinfo\">\n              Source: {this.props.topicPost.source.name}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(CategoryItems);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport CategoryItems from \"./CategoryItems\";\n// import CategorySidebar from \"../containers/CategorySidebar\";\n\nclass Category extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      categoryPosts: [],\n      categoryName: \"\",\n    };\n  }\n\n  render() {\n    let topicUrl = this.props.location.pathname.split(\"/\").slice(-1)[0];\n    return (\n      <>\n        <div className=\"topdog\">\n          <h3 className=\"categoryfeedtitle\">\n            <span className=\"searchTitle\">#{topicUrl}</span>\n            <img\n              src=\"https://fetchnow.org/refresh.png\"\n              className=\"feedtitleimage\"\n              alt=\"feedicon\"\n              onClick={this.props.fetchFromGoogle}\n            />\n          </h3>\n\n          <div className=\"categorydrop\"></div>\n\n          {this.props.categoryPosts.map((post) => (\n            <CategoryItems\n              topicPost={post}\n              key={post.url}\n              categoryName={this.state.categoryName}\n              deletePostFromCategory={this.props.deletePostFromCategory}\n            />\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(Category);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Dropdown } from \"react-bootstrap\";\n// import { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { withRouter } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      search: \"\",\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleKeyPress = (e) => {\n    if (e.key === \" \" || e.key >= 0 || e.key < 10) {\n      e.preventDefault();\n    }\n    if (e.key === \"Enter\") {\n      setTimeout(this.searchToEmpty, 10);\n    }\n  };\n\n  searchToEmpty = () => {\n    this.setState({\n      search: \"\",\n    });\n  };\n\n  loginLogic = () => {\n    // if not logged in\n    if (Object.keys(this.props.currentUser).length === 0) {\n      return (\n        <>\n          <div\n            className=\"topcoolbutton\"\n            onClick={() => this.props.history.push(\"/login\")}\n          >\n            <p>Sign In</p>\n          </div>\n          <div\n            className=\"topcoolbuttonjaz\"\n            onClick={() => this.props.history.push(\"/signup\")}\n          >\n            <p>Sign Up</p>\n          </div>\n        </>\n      );\n    } else\n      return (\n        <div className=\"profile-nav\">\n          <Dropdown>\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n              <img src=\"https://fetchnow.org/missing_avatar.jpg\" alt=\"avatar\" />{\" \"}\n              {this.props.currentUser.username}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <p\n                className=\"dropdown-item\"\n                onClick={() => this.props.history.push(\"/profile\")}\n              >\n                Edit Profile\n              </p>\n              <p className=\"dropdown-item\" onClick={this.props.handleLogout}>\n                Logout\n              </p>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n      );\n  };\n\n  loginLogicSearch = () => {\n    if (Object.keys(this.props.currentUser).length !== 0) {\n      return (\n        <div className=\"searchBarContainer\">\n          <form\n            onSubmit={(e) => this.props.fetchFromSearch(e, this.state.search)}\n            onKeyPress={(e) => this.handleKeyPress(e)}\n          >\n            <Form.Group controlId=\"formBasicSearch\">\n              <center>\n                <Form.Control\n                  type=\"text\"\n                  name=\"search\"\n                  placeholder=\"Search All Articles\"\n                  onChange={(e) => this.handleChange(e)}\n                  value={this.state.search}\n                  className=\"searchBar\"\n                />\n              </center>\n            </Form.Group>\n          </form>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"topbar\">\n          <Link\n            to={\n              Object.keys(this.props.currentUser).length === 0 ? \"/\" : \"/feed\"\n            }\n          >\n            <img\n              className=\"logo\"\n              src=\"https://i.imgur.com/rBCrWno.png\"\n              alt=\"logo\"\n            />\n          </Link>\n\n          <div className=\"right-align-buttons\">{this.loginLogic()}</div>\n        </div>\n        {this.props.location.pathname.split(\"/\").slice(-1)[0] !== \"profile\" &&\n        this.props.location.pathname.split(\"/\").slice(-1)[0] !== \"add-topic\" &&\n        this.props.location.pathname.split(\"/\").slice(-1)[0] !== \"Fetch\" &&\n        this.props.location.pathname !== \"/\"\n          ? this.loginLogicSearch()\n          : null}\n      </>\n    );\n  }\n}\n\nexport default withRouter(Navbar);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass FeedItems extends Component {\n  constructor() {\n    super();\n    this.state = {\n      favorite: false,\n    };\n  }\n\n  toggleImage = () => {\n    this.setState((state) => ({ favorite: !state.favorite }));\n  };\n\n  render() {\n    let favorite;\n    if (this.state.favorite === true) {\n      favorite = \"https://fetchnow.org/heart.png\";\n    } else {\n      favorite = \"https://fetchnow.org/unheart.png\";\n    }\n    let correctOne = this.props.topicsFollowed.find(\n      (x) => x.id === this.props.topicPost.topic_id\n    );\n\n    return (\n      <>\n        {correctOne !== undefined ? (\n          <div className=\"newmain\">\n            <img\n              src={correctOne.logo}\n              alt=\"topic_logo\"\n              className=\"feeditemslogo\"\n              onClick={() =>\n                this.props.history.push(\n                  `/topic/${correctOne.topic_title.toLowerCase()}`\n                )\n              }\n            />\n\n            <div className=\"caption\">\n              <b\n                onClick={() =>\n                  this.props.history.push(\n                    `/topic/${correctOne.topic_title.toLowerCase()}`\n                  )\n                }\n              >\n                #{correctOne.topic_title}{\" \"}\n              </b>\n              <button\n                id={this.props.topicPost.id}\n                onClick={(event) => this.props.deletePostFromTopic(event)}\n                className=\"xOut\"\n              >\n                x\n              </button>\n              <p className=\"date\">\n                Published on{\" \"}\n                {new Date(this.props.topicPost.published_at).toString()}\n              </p>\n              <br />\n              {this.props.topicPost.caption}\n              <br />{\" \"}\n              <a\n                className=\"post_link\"\n                href={this.props.topicPost.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {this.props.topicPost.url}\n              </a>{\" \"}\n            </div>\n\n            <a\n              href={this.props.topicPost.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img\n                src={this.props.topicPost.image_url}\n                className=\"feedpostImage\"\n              />\n            </a>\n            <br />\n\n            <div className=\"bottomofCard\">\n              <p className=\"favorite\">\n                <img\n                  src={favorite}\n                  alt=\"favorite\"\n                  name=\"favorite\"\n                  className=\"favorite\"\n                  onClick={this.toggleImage}\n                />\n                Favorite\n                <a\n                  href={`sms:Text Someone&body=${this.props.topicPost.caption}%0D%0A%0D%0A${this.props.topicPost.url}`}\n                >\n                  <img\n                    src=\"https://fetchnow.org/imessage.png\"\n                    alt=\"imessage\"\n                    name=\"imessage\"\n                    className=\"iMessage\"\n                  />\n                  iMessage\n                </a>\n                <a\n                  href={`mailto:?subject=${this.props.topicPost.caption}&body=Hey you!%0D%0A%0D%0ACheck out this cool article I found on Fetch:%0D%0A%0D%0A${this.props.topicPost.url}`}\n                >\n                  <img\n                    src=\"https://fetchnow.org/mail.png\"\n                    alt=\"email\"\n                    className=\"email\"\n                  />\n                  Email\n                </a>\n              </p>\n\n              <p className=\"sourceinfo\">\n                Source: {this.props.topicPost.source}\n              </p>\n            </div>\n          </div>\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default withRouter(FeedItems); // so we can we use history.push\n","import React, { Component } from \"react\";\nimport FeedItems from \"./FeedItems\";\n// import CategorySidebar from \"../containers/CategorySidebar\";\n\nexport default class Feed extends Component {\n  render() {\n    return (\n      <>\n        <h3 className=\"mainfeedtitle\">\n          Fetch Feed\n          <img\n            src=\"https://fetchnow.org/refresh.png\"\n            className=\"feedtitleimage\"\n            alt=\"feedicon\"\n            onLoad={this.props.delayFetch}\n            onClick={this.props.fetchToTopicId}\n          />\n        </h3>\n\n        <div className=\"drop\"></div>\n        {this.props.allTopicPosts !== null &&\n        this.props.allTopicPosts.length !== 0 ? (\n          this.props.allTopicPosts.map((topicPost) => (\n            <FeedItems\n              deletePostFromTopic={this.props.deletePostFromTopic}\n              topicsFollowed={this.props.topicsFollowed}\n              topicPost={topicPost}\n              key={topicPost.id}\n            />\n          ))\n        ) : (\n          <div className=\"lds-dual-ring\"></div>\n        )}\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass SearchItems extends Component {\n  constructor() {\n    super();\n    this.state = {\n      favorite: false,\n    };\n  }\n\n  toggleImage = () => {\n    this.setState((state) => ({ favorite: !state.favorite }));\n  };\n\n  render() {\n    let favorite;\n    if (this.state.favorite === true) {\n      favorite = \"https://fetchnow.org/heart.png\";\n    } else {\n      favorite = \"https://fetchnow.org/unheart.png\";\n    }\n    // let searchName = this.props.location.pathname.split(\"/\").slice(-1)[0];\n    return (\n      <>\n        <div className=\"newmain\">\n          <img\n            src=\"https://fetchnow.org/magnifying.png\"\n            alt=\"topic_logo\"\n            className=\"feeditemslogo\"\n          />\n\n          <div className=\"caption\">\n            {\" \"}\n            <b className=\"CategoryTitle\">\n              {this.props.searchPost.source.name}{\" \"}\n            </b>\n            <p className=\"date\">\n              Published on{\" \"}\n              {new Date(this.props.searchPost.publishedAt).toString()}\n            </p>\n            <br></br>\n            {this.props.searchPost.title}\n            <br />{\" \"}\n            <a\n              className=\"post_link\"\n              href={this.props.searchPost.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {this.props.searchPost.url}\n            </a>\n            <br />\n            <a\n              href={this.props.searchPost.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <br></br>\n              <img\n                src={this.props.searchPost.urlToImage}\n                className=\"categorypostImage\"\n              />\n            </a>\n            <br />\n          </div>\n\n          <div className=\"bottomofCard\">\n            <p className=\"favorite\">\n              <img\n                src={favorite}\n                alt=\"favorite\"\n                name=\"favorite\"\n                className=\"favorite\"\n                onClick={this.toggleImage}\n              />\n              Favorite\n              <a\n                href={`sms:Text Someone&body=${this.props.searchPost.title}%0D%0A%0D%0A${this.props.searchPost.url}`}\n              >\n                <img\n                  src=\"https://fetchnow.org/imessage.png\"\n                  alt=\"imessage\"\n                  name=\"imessage\"\n                  className=\"iMessage\"\n                />\n                iMessage\n              </a>\n              <a\n                href={`mailto:?subject=${this.props.searchPost.title}&body=Hey you!%0D%0A%0D%0ACheck out this cool article I found on Fetch:%0D%0A%0D%0A${this.props.searchPost.url}`}\n              >\n                <img\n                  src=\"https://fetchnow.org/mail.png\"\n                  alt=\"email\"\n                  className=\"email\"\n                />\n                Email\n              </a>\n            </p>\n\n            <p className=\"sourceinfo\">\n              Source: {this.props.searchPost.source.name}\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(SearchItems);\n","import React, { Component } from \"react\";\nimport SearchItems from \"./SearchItems\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Search extends Component {\n  render() {\n    let searchTitle = this.props.location.pathname.split(\"/\").slice(-1)[0];\n    return (\n      <>\n        <div className=\"topdog\">\n          {/* {notFeedPath === \"category\"  &&  */}\n          <h3 className=\"categoryfeedtitle\">\n            Search: <span className=\"searchTitle\">#{searchTitle}</span>\n          </h3>\n          <img\n            src=\"https://fetchnow.org/refresh.png\"\n            className=\"deletetopic\"\n            alt=\"feedicon\"\n            onClick={() => this.props.history.push(\"/feed\")}\n          />\n          <div className=\"categorydrop\"></div>\n\n          {this.props.searchPosts.map((post) => (\n            <SearchItems\n              searchPost={post}\n              key={post.url}\n              //   categoryName={this.props.categoryName}\n              deletePostFromCategory={this.props.deletePostFromCategory}\n            />\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(Search);\n","import React, { Component } from \"react\";\nimport Welcome from \"./components/Welcome\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport Topic from \"./components/Topic\";\nimport AddTopic from \"./components/AddTopic\";\nimport UserProfile from \"./components/UserProfile\";\nimport Sidebar from \"./containers/Sidebar\";\nimport Category from \"./containers/Category\";\nimport Navbar from \"./containers/Navbar\";\nimport Feed from \"./containers/Feed\";\nimport Search from \"./containers/Search\";\nimport { Route, withRouter, Redirect, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      currentUser: {},\n      loading: true,\n      topicsFollowed: [],\n      allTopicPosts: [],\n      categoryPosts: [],\n      searchPosts: [],\n    };\n  }\n\n  handleSignupSubmit = (event, SignupInfo) => {\n    // first function called when signing up\n    event.preventDefault();\n    fetch(\"https://fetch-backend-api.herokuapp.com/signup\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user: SignupInfo,\n      }),\n    })\n      .then((resp) => resp.json())\n      .then((json) => {\n        if (json.error) {\n          document.getElementById(\"login-error\").innerText = json.error;\n        } else {\n          localStorage.setItem(\"token\", json.jwt);\n          this.setState({\n            currentUser: {\n              id: json.user.data.attributes.id,\n              ...json.user.data.attributes,\n            },\n          });\n          this.createTrendingTopic();\n        }\n      });\n  };\n\n  createTrendingTopic = () => {\n    fetch(\"https://fetch-backend-api.herokuapp.com/add-topic\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({\n        topic: {\n          topic_title: \"Trending\",\n          logo:\n            \"https://cust-images.grenadine.co/grenadine/image/upload/c_fill,f_jpg,g_face,h_1472,w_1472/v0/Kinnektor/QgOV_5613.png\",\n          user_id: this.state.currentUser.id,\n          page_size: null,\n          plus: null,\n          sort_by: null,\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        this.followTrending(data.topic.data.attributes.id);\n      })\n      .then(() => {\n        this.props.history.push(\"/feed\");\n      });\n  };\n\n  followTrending = (topicId) => {\n    fetch(\n      `https://newsapi.org/v2/top-headlines?pageSize=5&country=us&apiKey=07af66c02837407a82106528c10d64c5`\n    )\n      .then((res) => res.json())\n      .then((result) => {\n        result.articles.map((article) =>\n          this.postTrendingTopicToOurApi(article, topicId)\n        ); // Sending each Article into postToOurApi, good allTopicPosts! not using state!\n      });\n  };\n\n  postTrendingTopicToOurApi = (result, topicId) => {\n    fetch(\"https://fetch-backend-api.herokuapp.com/posts\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({\n        topic_id: topicId,\n        post: {\n          caption: result.title,\n          source: result.source.name,\n          image_url: result.urlToImage,\n          url: result.url,\n          published_at: result.publishedAt,\n        },\n      }),\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        fetch(\"https://fetch-backend-api.herokuapp.com/post_topics\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\",\n            Accept: \"application/json\",\n            Authorization: localStorage.getItem(\"token\"),\n          },\n          body: JSON.stringify({\n            post_topic: {\n              post_id: data.post.id,\n              topic_id: topicId,\n            },\n          }),\n        });\n      })\n      .then(this.fetchToTopicId());\n  };\n\n  // iterate through this.state.topicsFollowed and match topic_title with topicUrl...\n  // if successful then make fetch request localhost.com/3000/topics/{id}\n\n  handleSubmitTopic = (event, socialInput) => {\n    // before creating posttopic make sure you run this and also make sure POSTING to POST MODEL is done.\n    event.preventDefault();\n    socialInput.topic_title !== \"\"\n      ? fetch(\"https://fetch-backend-api.herokuapp.com/add-topic\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\",\n            Accept: \"application/json\",\n            Authorization: localStorage.getItem(\"token\"),\n          },\n          body: JSON.stringify({\n            topic: {\n              ...socialInput,\n            },\n          }),\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            this.updateStateOfTopicsFollowed([data.topic.data.attributes]);\n            return data.topic.data.attributes.id; // topicId\n          })\n          .then((topicID) => {\n            this.fetchFromGoogle(topicID); // took out topicID\n          })\n          .then(() => {\n            this.props.history.push(\"/feed\"); // this.props.history.push(\"/feed\"); needs .then\n          })\n      : window.alert(\"Topic title cannot be empty\");\n  };\n\n  fetchFromGoogle = () => {\n    // eslint-disable-next-line\n    this.state.topicsFollowed.map((topic) => {\n      let plus = topic.plus === true ? \"+\" : \"\";\n\n      fetch(\n        `https://newsapi.org/v2/everything?language=${topic.language}&pageSize=${topic.page_size}&q=${plus}${topic.topic_title}&sortBy=${topic.sort_by}&excludeDomains=slashdot.org&apiKey=07af66c02837407a82106528c10d64c5`\n      )\n        .then((res) => res.json())\n        .then((result) => {\n          result.articles.map((article) =>\n            this.postToOurApi(article, topic.id)\n          ); // Sending each Article into postToOurApi, good allTopicPosts! not using state!\n        });\n    });\n  };\n\n  postToOurApi = (result, topicId) => {\n    fetch(\"https://fetch-backend-api.herokuapp.com/posts\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n      body: JSON.stringify({\n        topic_id: topicId,\n        post: {\n          caption: result.title,\n          source: result.source.name,\n          image_url: result.urlToImage,\n          url: result.url,\n          published_at: result.publishedAt,\n        },\n      }),\n    })\n      .then((resp) => resp.json())\n      .then((resp) => {\n        if (resp.post) {\n          fetch(\"https://fetch-backend-api.herokuapp.com/post_topics\", {\n            method: \"POST\",\n            headers: {\n              \"Content-type\": \"application/json\",\n              Accept: \"application/json\",\n              Authorization: localStorage.getItem(\"token\"), // test out without this later.\n            },\n            body: JSON.stringify({\n              post_topic: {\n                post_id: resp.post.id,\n                topic_id: topicId,\n              },\n            }),\n          });\n        }\n        this.fetchToTopicId();\n      });\n  };\n\n  delayFetch = () => {\n    setTimeout(this.fetchToTopicId, 600);\n  };\n\n  fetchToTopicId = () => {\n    this.state.topicsFollowed.forEach((topic) => {\n      fetch(`https://fetch-backend-api.herokuapp.com/topics/${topic.id}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: localStorage.getItem(\"token\"),\n        },\n      })\n        .then((resp) => resp.json())\n        .then((resp) => {\n          let topicId = resp.topic.data.attributes.id;\n          let topicPosts = resp.topic.data.attributes.posts;\n          topicPosts = topicPosts.map((postObj) => {\n            return { ...postObj, topic_id: topicId };\n          });\n          let allTopicPostsIds =\n            this.state.allTopicPosts !== null\n              ? this.state.allTopicPosts.map((tp) => tp.id)\n              : [];\n          let cleanTopicPosts = topicPosts.filter(\n            (topicpost) => !allTopicPostsIds.includes(topicpost.id)\n          ); // if this topicPost's id isn't in allTopicPostsIds\n\n          this.state.allTopicPosts !== null &&\n            this.setState({\n              allTopicPosts: [...this.state.allTopicPosts, ...cleanTopicPosts],\n            });\n        });\n    });\n  };\n\n  componentDidMount() {\n    fetch(\"https://fetch-backend-api.herokuapp.com/re_auth\", {\n      // fetch GET would only need 1 argument. the rest need 2\n      method: \"GET\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    })\n      .then((res) => res.json())\n      .catch((error) => {\n        if (error) {\n          return window.alert(\"Server is starting up\");\n        } else {\n          return window.alert(\"Oh my. Something has gone terribly wrong.\");\n        }\n      })\n      .then((json) => {\n        if (json.user !== undefined) {\n          this.setState(\n            {\n              currentUser: {\n                id: json.user.data.id,\n                ...json.user.data.attributes,\n              },\n            },\n            () => {\n              this.setState({ loading: false });\n            }\n          );\n        } else {\n          this.setState({ loading: false });\n        }\n      })\n      .catch(() => {});\n    // resize css, hide certain components on mobile\n    // let slug = this.props.location.pathname.split(\"/\").slice(-1)[0];\n    // if (slug === \"add-topic\" || slug === \"profile\") {\n    //   window.addEventListener(\"resize\", this.resize.bind(this));\n    //   this.resize();\n    // }\n  }\n\n  // resize = () => {\n  //   let newHeader = document.querySelector(\"#root > div > header\");\n  //   let newCat = document.querySelector(\"#root > div > div.category\");\n\n  //   if (window.innerWidth < 1035) {\n  //     newHeader.style.visibility = \"hidden\";\n  //     newCat.style.visibility = \"hidden\";\n  //   } else {\n  //     newHeader.style.visibility = \"visible\";\n  //     newCat.style.visibility = \"visible\";\n  //   }\n  // };\n\n  fetchFromSearch = (e, searchValue) => {\n    e.preventDefault();\n    fetch(\n      `https://newsapi.org/v2/everything?language=en&pageSize=6&q=+${searchValue}&excludeDomains=slashdot.org&apiKey=07af66c02837407a82106528c10d64c5`\n    )\n      .then((res) => res.json())\n      .then((resp) =>\n        this.setState({\n          searchPosts: resp.articles,\n        })\n      );\n    this.props.history.push(`/search/${searchValue}`);\n  };\n\n  deletePostFromCategory = (event) => {\n    event.preventDefault();\n    this.setState({\n      categoryPosts: this.state.categoryPosts.filter(\n        (x) => x.url !== event.target.id\n      ),\n    });\n  };\n\n  deletePostFromTopic = (event) => {\n    event.preventDefault();\n    fetch(`https://fetch-backend-api.herokuapp.com/posts/${event.target.id}`, {\n      method: \"delete\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    });\n    this.setState({\n      allTopicPosts: this.state.allTopicPosts.filter(\n        (x) => x.id !== parseInt(event.target.id)\n      ),\n    });\n  };\n\n  handleLoginSubmit = (event, loginInfo) => {\n    event.preventDefault();\n    fetch(\"https://fetch-backend-api.herokuapp.com/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        auth: {\n          username: loginInfo.username,\n          password: loginInfo.password,\n          first_name: loginInfo.first_name,\n          last_name: loginInfo.last_name,\n        },\n      }),\n    })\n      .then((resp) => resp.json())\n      .then((json) => {\n        if (json.error) {\n          document.getElementById(\"login-error\").innerText = json.error;\n        } else {\n          localStorage.setItem(\"token\", json.jwt);\n          this.setState({\n            currentUser: {\n              id: json.user.data.attributes.id,\n              username: json.user.data.attributes.username,\n              first_name: json.user.data.attributes.first_name,\n              last_name: json.user.data.attributes.last_name,\n            },\n          });\n          this.fetchToTopicId();\n          this.props.history.push(\"/feed\");\n        }\n      });\n  };\n\n  updateStateOfTopicsFollowed = (result) => {\n    /* 1. Pass down this function to Sidebar, and take in the value via fetch result\n    2. Use concat to combine prevState with new results\n    3. call this function via handleSubmitTopic & pass it the addTopicForm info.\n    */\n    this.setState((prevState) => ({\n      topicsFollowed: prevState.topicsFollowed.concat(result),\n    }));\n  };\n\n  deleteTopic = (event) => {\n    event.preventDefault();\n    fetch(`https://fetch-backend-api.herokuapp.com/topics/${event.target.id}`, {\n      method: \"delete\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: localStorage.getItem(\"token\"),\n      },\n    });\n    this.setState({\n      topicsFollowed: this.state.topicsFollowed.filter(\n        (x) => x.id !== parseInt(event.target.id)\n      ),\n    });\n    this.props.history.push(\"/feed\");\n  };\n\n  handleLogout = () => {\n    localStorage.clear();\n    this.setState({\n      currentUser: {},\n      topicsFollowed: [],\n      allTopicPosts: [],\n      categoryPosts: [],\n      loading: false,\n      searchPosts: [],\n    });\n    this.props.history.push(\"/\");\n  };\n\n  handleCategoryClick(categoryName) {\n    fetch(\n      `https://newsapi.org/v2/top-headlines?country=us&category=${categoryName}&pageSize=6&apiKey=07af66c02837407a82106528c10d64c5`\n    )\n      .then((resp) => resp.json())\n      .then((resp) =>\n        this.setState({\n          categoryPosts: resp.articles,\n          categoryName: categoryName,\n        })\n      );\n    this.props.history.push(`/category/${categoryName}`);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar\n          currentUser={this.state.currentUser}\n          handleLogout={this.handleLogout}\n          fetchFromSearch={this.fetchFromSearch}\n          searchQuery={this.state.searchQuery}\n        />\n\n        <Switch>\n          <Route exact path=\"/\" component={Welcome} />\n\n          <Route\n            exact\n            path=\"/login\"\n            render={(props) => (\n              <Login {...props} handleLoginSubmit={this.handleLoginSubmit} />\n            )}\n          />\n          <Route\n            exact\n            path=\"/signup\"\n            render={(props) => (\n              <Signup {...props} handleSignupSubmit={this.handleSignupSubmit} />\n            )}\n          />\n\n          {this.state.loading === false ? (\n            Object.keys(this.state.currentUser).length !== 0 ? (\n              <React.Fragment>\n                <Route\n                  exact\n                  path=\"/feed\"\n                  render={(props) => (\n                    <Feed\n                      {...props}\n                      delayFetch={this.delayFetch}\n                      topicsFollowed={this.state.topicsFollowed}\n                      fetchFromGoogle={this.fetchFromGoogle}\n                      fetchToTopicId={this.fetchToTopicId}\n                      allTopicPosts={this.state.allTopicPosts}\n                      deletePostFromTopic={this.deletePostFromTopic}\n                    />\n                  )}\n                />\n\n                <Route\n                  path=\"/search/\"\n                  render={(props) => (\n                    <Search\n                      {...props}\n                      currentUser={this.state.currentUser}\n                      searchPosts={this.state.searchPosts}\n                      deletePostFromCategory={this.deletePostFromCategory}\n                      fetchFromGoogle={this.fetchFromGoogle}\n                    />\n                  )}\n                />\n\n                <Route\n                  path=\"/category/\"\n                  render={(props) => (\n                    <Category\n                      {...props}\n                      currentUser={this.state.currentUser}\n                      categoryPosts={this.state.categoryPosts}\n                      deletePostFromCategory={this.deletePostFromCategory}\n                    />\n                  )}\n                />\n                {this.props.location.pathname.split(\"/\").slice(-1)[0] ===\n                  \"feed\" || window.innerWidth > 1034 ? (\n                  <div className=\"category\">\n                    <h3>Categories</h3>\n                    <div className=\"catItems\">\n                      <p onClick={(e) => this.handleCategoryClick(\"business\")}>\n                        #Business\n                      </p>\n                      <p\n                        onClick={(e) =>\n                          this.handleCategoryClick(\"entertainment\")\n                        }\n                      >\n                        #Entertainment\n                      </p>\n                      <p onClick={(e) => this.handleCategoryClick(\"general\")}>\n                        #General\n                      </p>\n                      <p onClick={(e) => this.handleCategoryClick(\"health\")}>\n                        #Health\n                      </p>\n                      <p onClick={(e) => this.handleCategoryClick(\"science\")}>\n                        #Science\n                      </p>\n                      <p onClick={(e) => this.handleCategoryClick(\"sports\")}>\n                        #Sports\n                      </p>\n                      <p\n                        onClick={(e) => this.handleCategoryClick(\"technology\")}\n                      >\n                        #Technology\n                      </p>\n                    </div>\n                  </div>\n                ) : null}\n\n                <Sidebar\n                  currentUser={this.state.currentUser}\n                  topicsFollowed={this.state.topicsFollowed}\n                  updateStateOfTopicsFollowed={this.updateStateOfTopicsFollowed}\n                />\n\n                <Route\n                  path=\"/topic\"\n                  render={(props) => (\n                    <Topic\n                      {...props}\n                      fetchFromGoogle={this.fetchFromGoogle}\n                      topicsFollowed={this.state.topicsFollowed}\n                      allTopicPosts={this.state.allTopicPosts}\n                      deletePostFromTopic={this.deletePostFromTopic}\n                      deleteTopic={this.deleteTopic}\n                    />\n                  )}\n                />\n\n                <Route\n                  exact\n                  path=\"/add-topic\"\n                  render={(props) => (\n                    <AddTopic\n                      {...props}\n                      currentUser={this.state.currentUser}\n                      handleSubmitTopic={this.handleSubmitTopic}\n                      updateStateOfTopicsFollowed={\n                        this.updateStateOfTopicsFollowed\n                      }\n                    />\n                  )}\n                />\n\n                <Route\n                  exact\n                  path=\"/profile\"\n                  render={(props) => (\n                    <UserProfile\n                      {...props}\n                      currentUser={this.state.currentUser}\n                      handleLogout={this.handleLogout}\n                    />\n                  )}\n                />\n              </React.Fragment>\n            ) : (\n              <Redirect to=\"/\" />\n            )\n          ) : (\n            <>\n              <div className=\"lds-dual-ring\"></div>\n            </>\n          )}\n        </Switch>\n        <img\n          src=\"https://fetchnow.org/scroll.png\"\n          onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\n          className=\"scrollTop\"\n          alt=\"ScrollTop\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport \"./App-min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n// require('dotenv').config()\n// console.log(process.env.API_KEY)\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}